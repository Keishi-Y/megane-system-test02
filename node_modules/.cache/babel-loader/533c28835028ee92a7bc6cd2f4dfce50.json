{"ast":null,"code":"var _jsxFileName = \"/Users/k4/test-apps/megane-system-test02/src/components/tableData/frame/FrameForm.js\";\nimport React, { useState } from \"react\";\nimport Tags from \"../tag/Tags\";\nimport selectList from \"../selectList/SelectList.json\";\nexport default function FrameForm({\n  frameAdded\n}) {\n  const [updateDate, setUpdateDate] = useState(\"\");\n  const [frameName, setFrameName] = useState(\"\");\n  const [productNumber, setProductNumber] = useState(\"\");\n  const [priceTaxExcluded, setPriceTaxExcluded] = useState(\"\");\n  const [targetGender, setTargetGender] = useState([]);\n  const [frameType, setFrameType] = useState([]);\n  const [series, setSeries] = useState([]);\n  const [category, setCategory] = useState([]); // const [description, setDescription] = useState(\"\");\n  // const [keywords, setKeywords] = useState(\"\");\n  // const [size, setSize] = useState(\"\");\n\n  const [weight, setWeight] = useState(\"\");\n  const [nosePad, setNosePad] = useState([]);\n  const [materialFront, setMaterialFront] = useState([]);\n  const [materialTemple, setMaterialTemple] = useState([]);\n  const [color, setColor] = useState([]);\n  const [count, setCount] = useState(0);\n\n  const resetFrameForm = () => {\n    setFrameName(\"\");\n    setProductNumber(\"\");\n    setPriceTaxExcluded(\"\");\n    setTargetGender(\"\");\n    setFrameType(\"\");\n    setSeries(\"\");\n    setCategory(\"\"); // setDescription(\"\");\n    // setKeywords(\"\");\n    // setSize(\"\");\n\n    setWeight(\"\");\n    setNosePad(\"\");\n    setMaterialFront(\"\");\n    setMaterialTemple(\"\");\n    setColor(\"\");\n    setCount(count + 1);\n  };\n\n  const submitFrame = async e => {\n    e.preventDefault();\n\n    try {\n      await fetch(\"/api/frames\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          frameName,\n          productNumber,\n          priceTaxExcluded,\n          targetGender,\n          frameType,\n          series,\n          category,\n          // description,\n          // keywords,\n          // size,\n          weight,\n          nosePad,\n          materialFront,\n          materialTemple,\n          color\n        })\n      });\n      resetFrameForm();\n      frameAdded();\n    } catch (err) {\n      console.error(err);\n      window.alert(\"投稿エラーです\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"\\u30D5\\u30EC\\u30FC\\u30E0\\u60C5\\u5831\\u3092\\u8FFD\\u52A0\\u3059\\u308B\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"\",\n    onSubmit: submitFrame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"frameName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"\\u54C1\\u540D\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"frameName\",\n    value: frameName,\n    className: \"form-control\",\n    onChange: e => setFrameName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"\\u54C1\\u756A\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"productNumber\",\n    value: productNumber,\n    className: \"form-control\",\n    onChange: e => setProductNumber(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"priceTaxExcluded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"\\u4FA1\\u683C\\uFF08\\u7A0E\\u629C\\uFF09\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"priceTaxExcluded\",\n    value: priceTaxExcluded,\n    className: \"form-control\",\n    onChange: e => setPriceTaxExcluded(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"targetGender\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"\\u6027\\u5225\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setTargetGender(e.target.value),\n    className: \"form-control\",\n    name: \"targetGender\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, selectList.targetGenderList.map((targetGender, index) => /*#__PURE__*/React.createElement(\"option\", {\n    value: targetGender,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, targetGender)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"frameType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"\\u30D5\\u30EC\\u30FC\\u30E0\\u30BF\\u30A4\\u30D7\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setFrameType(e.target.value),\n    className: \"form-control\",\n    name: \"frameType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, selectList.frameTypeList.map((frameType, index) => /*#__PURE__*/React.createElement(\"option\", {\n    value: frameType,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, frameType)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"series\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, \"\\u30B7\\u30EA\\u30FC\\u30BA\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setSeries(e.target.value),\n    className: \"form-control\",\n    name: \"series\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, selectList.seriesList.map((series, index) => /*#__PURE__*/React.createElement(\"option\", {\n    value: series,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, series)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, \"\\u30AB\\u30C6\\u30B4\\u30EA\\u30FC\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setCategory(e.target.value),\n    className: \"form-control\",\n    name: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, selectList.categoryList.map((category, index) => /*#__PURE__*/React.createElement(\"option\", {\n    value: category,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, category)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"weight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, \"\\u30D5\\u30EC\\u30FC\\u30E0\\u306E\\u91CD\\u91CF\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"weight\",\n    value: weight,\n    className: \"form-control\",\n    onChange: e => setWeight(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"targetNosePad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, \"\\u9F3B\\u30D1\\u30C3\\u30C9\\u306E\\u5F62\\u72B6\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setNosePad(e.target.value),\n    className: \"form-control\",\n    name: \"nosePad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, selectList.nosePadList.map((nosePad, index) => /*#__PURE__*/React.createElement(\"option\", {\n    value: nosePad,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, nosePad)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"materialFront\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, \"\\u30D5\\u30EC\\u30FC\\u30E0\\u7D20\\u6750\\uFF08\\u30D5\\u30ED\\u30F3\\u30C8\\uFF09: \"), /*#__PURE__*/React.createElement(Tags, {\n    tagsUpdated: setMaterialFront // key={count}\n    ,\n    tagChoices: selectList.materialChoices,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"materialTemple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, \"\\u30D5\\u30EC\\u30FC\\u30E0\\u7D20\\u6750\\uFF08\\u30C6\\u30F3\\u30D7\\u30EB\\uFF09\\uFF1A\"), /*#__PURE__*/React.createElement(Tags, {\n    tagsUpdated: setMaterialTemple // key={count}\n    ,\n    tagChoices: selectList.materialChoices,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }, \"\\u30AB\\u30E9\\u30FC\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setColor(e.target.value),\n    className: \"form-control\",\n    name: \"color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, selectList.colorList.map((color, index) => /*#__PURE__*/React.createElement(\"option\", {\n    value: color,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }, color)))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, \"\\u8FFD\\u52A0\\u3059\\u308B\"))));\n}","map":{"version":3,"sources":["/Users/k4/test-apps/megane-system-test02/src/components/tableData/frame/FrameForm.js"],"names":["React","useState","Tags","selectList","FrameForm","frameAdded","updateDate","setUpdateDate","frameName","setFrameName","productNumber","setProductNumber","priceTaxExcluded","setPriceTaxExcluded","targetGender","setTargetGender","frameType","setFrameType","series","setSeries","category","setCategory","weight","setWeight","nosePad","setNosePad","materialFront","setMaterialFront","materialTemple","setMaterialTemple","color","setColor","count","setCount","resetFrameForm","submitFrame","e","preventDefault","fetch","method","body","JSON","stringify","err","console","error","window","alert","target","value","targetGenderList","map","index","frameTypeList","seriesList","categoryList","nosePadList","materialChoices","colorList"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Tags from \"../tag/Tags\";\nimport selectList from \"../selectList/SelectList.json\";\n\nexport default function FrameForm({ frameAdded }) {\n  const [updateDate, setUpdateDate] = useState(\"\");\n  const [frameName, setFrameName] = useState(\"\");\n  const [productNumber, setProductNumber] = useState(\"\");\n  const [priceTaxExcluded, setPriceTaxExcluded] = useState(\"\");\n  const [targetGender, setTargetGender] = useState([]);\n  const [frameType, setFrameType] = useState([]);\n  const [series, setSeries] = useState([]);\n  const [category, setCategory] = useState([]);\n  // const [description, setDescription] = useState(\"\");\n  // const [keywords, setKeywords] = useState(\"\");\n  // const [size, setSize] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n  const [nosePad, setNosePad] = useState([]);\n  const [materialFront, setMaterialFront] = useState([]);\n  const [materialTemple, setMaterialTemple] = useState([]);\n  const [color, setColor] = useState([]);\n\n  const [count, setCount] = useState(0);\n\n  const resetFrameForm = () => {\n    setFrameName(\"\");\n    setProductNumber(\"\");\n    setPriceTaxExcluded(\"\");\n    setTargetGender(\"\");\n    setFrameType(\"\");\n    setSeries(\"\");\n    setCategory(\"\");\n    // setDescription(\"\");\n    // setKeywords(\"\");\n    // setSize(\"\");\n    setWeight(\"\");\n    setNosePad(\"\");\n    setMaterialFront(\"\");\n    setMaterialTemple(\"\");\n    setColor(\"\");\n    setCount(count + 1);\n  };\n\n  const submitFrame = async (e) => {\n    e.preventDefault();\n    try {\n      await fetch(\"/api/frames\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          frameName,\n          productNumber,\n          priceTaxExcluded,\n          targetGender,\n          frameType,\n          series,\n          category,\n          // description,\n          // keywords,\n          // size,\n          weight,\n          nosePad,\n          materialFront,\n          materialTemple,\n          color,\n        }),\n      });\n      resetFrameForm();\n      frameAdded();\n    } catch (err) {\n      console.error(err);\n      window.alert(\"投稿エラーです\");\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">フレーム情報を追加する</div>\n      <div className=\"card-body\">\n        <form className=\"\" onSubmit={submitFrame}>\n          <div className=\"form-group\">\n            <label htmlFor=\"frameName\">品名</label>\n            <input\n              type=\"text\"\n              name=\"frameName\"\n              value={frameName}\n              className=\"form-control\"\n              onChange={(e) => setFrameName(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"productNumber\">品番</label>\n            <input\n              type=\"text\"\n              name=\"productNumber\"\n              value={productNumber}\n              className=\"form-control\"\n              onChange={(e) => setProductNumber(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"priceTaxExcluded\">価格（税抜）</label>\n            <input\n              type=\"text\"\n              name=\"priceTaxExcluded\"\n              value={priceTaxExcluded}\n              className=\"form-control\"\n              onChange={(e) => setPriceTaxExcluded(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"targetGender\">性別</label>\n            <select\n              onChange={(e) => setTargetGender(e.target.value)}\n              className=\"form-control\"\n              name=\"targetGender\"\n            >\n              {selectList.targetGenderList.map((targetGender, index) => (\n                <option value={targetGender} key={index}>\n                  {targetGender}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"frameType\">フレームタイプ</label>\n            <select\n              onChange={(e) => setFrameType(e.target.value)}\n              className=\"form-control\"\n              name=\"frameType\"\n            >\n              {selectList.frameTypeList.map((frameType, index) => (\n                <option value={frameType} key={index}>\n                  {frameType}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"series\">シリーズ</label>\n            <select\n              onChange={(e) => setSeries(e.target.value)}\n              className=\"form-control\"\n              name=\"series\"\n            >\n              {selectList.seriesList.map((series, index) => (\n                <option value={series} key={index}>\n                  {series}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"category\">カテゴリー</label>\n            <select\n              onChange={(e) => setCategory(e.target.value)}\n              className=\"form-control\"\n              name=\"category\"\n            >\n              {selectList.categoryList.map((category, index) => (\n                <option value={category} key={index}>\n                  {category}\n                </option>\n              ))}\n            </select>\n          </div>\n          {/* <div className=\"form-group\">\n            <label htmlFor=\"description\">商品説明</label>\n            <input\n              type=\"text\"\n              name=\"description\"\n              value={description}\n              className=\"form-control\"\n              onChange={(e) => setDescription(e.target.value)}\n            />\n          </div> */}\n          {/* <div className=\"form-group\">\n            <label htmlFor=\"keywords\">キーワード</label>\n            <input\n              type=\"text\"\n              name=\"keywords\"\n              value={keywords}\n              className=\"form-control\"\n              onChange={(e) => setKeywords(e.target.value)}\n            />\n          </div> */}\n          {/* <div className=\"form-group\">\n            <label htmlFor=\"size\">サイズ</label>\n            <input\n              type=\"text\"\n              name=\"size\"\n              value={size}\n              className=\"form-control\"\n              onChange={(e) => setSize(e.target.value)}\n            />\n          </div> */}\n          <div className=\"form-group\">\n            <label htmlFor=\"weight\">フレームの重量</label>\n            <input\n              type=\"text\"\n              name=\"weight\"\n              value={weight}\n              className=\"form-control\"\n              onChange={(e) => setWeight(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"targetNosePad\">鼻パッドの形状</label>\n            <select\n              onChange={(e) => setNosePad(e.target.value)}\n              className=\"form-control\"\n              name=\"nosePad\"\n            >\n              {selectList.nosePadList.map((nosePad, index) => (\n                <option value={nosePad} key={index}>\n                  {nosePad}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"materialFront\">フレーム素材（フロント）: </label>\n            <Tags\n              tagsUpdated={setMaterialFront}\n              // key={count}\n              tagChoices={selectList.materialChoices}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"materialTemple\">フレーム素材（テンプル）：</label>\n            <Tags\n              tagsUpdated={setMaterialTemple}\n              // key={count}\n              tagChoices={selectList.materialChoices}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Color\">カラー</label>\n            <select\n              onChange={(e) => setColor(e.target.value)}\n              className=\"form-control\"\n              name=\"color\"\n            >\n              {selectList.colorList.map((color, index) => (\n                <option value={color} key={index}>\n                  {color}\n                </option>\n              ))}\n            </select>\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            追加する\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}