{"ast":null,"code":"var _jsxFileName = \"/Users/k4/test-apps/megane-system-test02/src/components/tableData/chart/ChartList.js\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport Chart from \"./Chart\";\nimport SortButton from \"../functions/SortButton\";\nimport FilterForm from \"../functions/FilterForm\";\nexport default function ChartList({\n  charts,\n  refreshCharts\n}) {\n  const [arrangeList, setArrangeList] = useState(charts);\n  const [filterQuery, setFilterQuery] = useState({});\n  useEffect(() => {\n    const arranged = [...charts].sort((a, b) => {\n      if (a.sort_id > b.sort_id) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n    setArrangeList(arranged);\n  }, [charts]);\n\n  const handleSortAscend = () => {\n    const arranged = [...charts].sort((a, b) => {\n      if (a.sort_id < b.sort_id) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n    setArrangeList(arranged);\n  };\n\n  const handleSortDsecend = () => {\n    const arranged = [...charts].sort((a, b) => {\n      if (a.sort_id > b.sort_id) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n    setArrangeList(arranged);\n  }; // const handleFilterList = (e) => {\n  //   const updateList = [...charts].filter((item) => {\n  //     return item.search(e.target.value) !== -1;\n  //   });\n  //   setArrangeList(updateList);\n  // };\n\n\n  const filteredList = useMemo(() => {\n    let tmpList = [...charts];\n    const filterName = filterQuery.name && filterQuery.titletoLowerCase();\n    tmpList = tmpList.filter(row => {\n      if (filterQuery.name && String(row.name).toLowerCase().indexOf(filterName) === -1) {\n        return false;\n      }\n\n      return false;\n    });\n    return tmpList;\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"mt-5 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"\\u30AB\\u30EB\\u30C6\\u4E00\\u89A7\"), /*#__PURE__*/React.createElement(SortButton, {\n    handleSortDescend: handleSortDsecend,\n    handleSortAscend: handleSortAscend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FilterForm, {\n    handleFilterList: handleFilterList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, arrangeList.map(chart => /*#__PURE__*/React.createElement(Chart, {\n    chart: chart,\n    key: chart.id,\n    refreshCharts: refreshCharts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/k4/test-apps/megane-system-test02/src/components/tableData/chart/ChartList.js"],"names":["React","useState","useEffect","useMemo","Chart","SortButton","FilterForm","ChartList","charts","refreshCharts","arrangeList","setArrangeList","filterQuery","setFilterQuery","arranged","sort","a","b","sort_id","handleSortAscend","handleSortDsecend","filteredList","tmpList","filterName","name","titletoLowerCase","filter","row","String","toLowerCase","indexOf","handleFilterList","map","chart","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport Chart from \"./Chart\";\nimport SortButton from \"../functions/SortButton\";\nimport FilterForm from \"../functions/FilterForm\";\n\nexport default function ChartList({ charts, refreshCharts }) {\n  const [arrangeList, setArrangeList] = useState(charts);\n  const [filterQuery, setFilterQuery] = useState({});\n\n  useEffect(() => {\n    const arranged = [...charts].sort((a, b) => {\n      if (a.sort_id > b.sort_id) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n    setArrangeList(arranged);\n  }, [charts]);\n\n  const handleSortAscend = () => {\n    const arranged = [...charts].sort((a, b) => {\n      if (a.sort_id < b.sort_id) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n    setArrangeList(arranged);\n  };\n\n  const handleSortDsecend = () => {\n    const arranged = [...charts].sort((a, b) => {\n      if (a.sort_id > b.sort_id) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n    setArrangeList(arranged);\n  };\n\n  // const handleFilterList = (e) => {\n  //   const updateList = [...charts].filter((item) => {\n  //     return item.search(e.target.value) !== -1;\n  //   });\n  //   setArrangeList(updateList);\n  // };\n\n  const filteredList = useMemo(() => {\n    let tmpList = [...charts];\n\n    const filterName = filterQuery.name && filterQuery.titletoLowerCase();\n\n    tmpList = tmpList.filter((row) => {\n      if (\n        filterQuery.name &&\n        String(row.name).toLowerCase().indexOf(filterName) === -1\n      ) {\n        return false;\n      }\n      return false;\n    });\n\n    return tmpList;\n  });\n\n  return (\n    <div>\n      <h2 className=\"mt-5 mb-3\">カルテ一覧</h2>\n      <SortButton\n        handleSortDescend={handleSortDsecend}\n        handleSortAscend={handleSortAscend}\n      />\n      <FilterForm handleFilterList={handleFilterList} />\n      <div className=\"list-group\">\n        {arrangeList.map((chart) => (\n          <Chart chart={chart} key={chart.id} refreshCharts={refreshCharts} />\n        ))}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}