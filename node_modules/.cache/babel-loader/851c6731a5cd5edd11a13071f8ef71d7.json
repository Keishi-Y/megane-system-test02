{"ast":null,"code":"import _toConsumableArray from\"/Users/k4/test-apps/megane-system-test02/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/k4/test-apps/megane-system-test02/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";export default function Tags(_ref){var tagsUpdated=_ref.tagsUpdated,key=_ref.key,tagChoices=_ref.tagChoices;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),selectedTags=_useState2[0],setSelectedTags=_useState2[1];useEffect(function(){setSelectedTags([]);},[key]);var tagChange=function tagChange(e){var value=e.target.value;var alreadySelected=selectedTags.includes(value);if(e.target.checked&&!alreadySelected){setSelectedTags([].concat(_toConsumableArray(selectedTags),[value]));}else if(!e.target.checked&&alreadySelected){setSelectedTags(selectedTags.filter(function(prevTag){return prevTag!==value;}));}};useEffect(function(){tagsUpdated(selectedTags);},[selectedTags,tagsUpdated]);return/*#__PURE__*/React.createElement(React.Fragment,null,tagChoices.map(function(choice,index){return/*#__PURE__*/React.createElement(\"label\",{className:\"checkbox-inline mr-3c checkbox-label\",key:index},/*#__PURE__*/React.createElement(\"input\",{className:\"checkbox-button\",type:\"checkbox\",value:choice,onChange:tagChange}),\" \"+choice);}));}","map":{"version":3,"sources":["/Users/k4/test-apps/megane-system-test02/src/components/tableData/tag/Tags.js"],"names":["React","useState","useEffect","Tags","tagsUpdated","key","tagChoices","selectedTags","setSelectedTags","tagChange","e","value","target","alreadySelected","includes","checked","filter","prevTag","map","choice","index"],"mappings":"sUAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,cAAe,SAASC,CAAAA,IAAT,MAAgD,IAAhCC,CAAAA,WAAgC,MAAhCA,WAAgC,CAAnBC,GAAmB,MAAnBA,GAAmB,CAAdC,UAAc,MAAdA,UAAc,eACrBL,QAAQ,CAAC,EAAD,CADa,wCACtDM,YADsD,eACxCC,eADwC,eAG7DN,SAAS,CAAC,UAAM,CACdM,eAAe,CAAC,EAAD,CAAf,CACD,CAFQ,CAEN,CAACH,GAAD,CAFM,CAAT,CAIA,GAAMI,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,CAAD,CAAO,CACvB,GAAMC,CAAAA,KAAK,CAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB,CACA,GAAME,CAAAA,eAAe,CAAGN,YAAY,CAACO,QAAb,CAAsBH,KAAtB,CAAxB,CACA,GAAID,CAAC,CAACE,MAAF,CAASG,OAAT,EAAoB,CAACF,eAAzB,CAA0C,CACxCL,eAAe,8BAAKD,YAAL,GAAmBI,KAAnB,GAAf,CACD,CAFD,IAEO,IAAI,CAACD,CAAC,CAACE,MAAF,CAASG,OAAV,EAAqBF,eAAzB,CAA0C,CAC/CL,eAAe,CAACD,YAAY,CAACS,MAAb,CAAoB,SAACC,OAAD,QAAaA,CAAAA,OAAO,GAAKN,KAAzB,EAApB,CAAD,CAAf,CACD,CACF,CARD,CAUAT,SAAS,CAAC,UAAM,CACdE,WAAW,CAACG,YAAD,CAAX,CACD,CAFQ,CAEN,CAACA,YAAD,CAAeH,WAAf,CAFM,CAAT,CAIA,mBACE,wCACGE,UAAU,CAACY,GAAX,CAAe,SAACC,MAAD,CAASC,KAAT,qBACd,6BAAO,SAAS,CAAC,sCAAjB,CAAwD,GAAG,CAAEA,KAA7D,eACE,6BACE,SAAS,CAAC,iBADZ,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAED,MAHT,CAIE,QAAQ,CAAEV,SAJZ,EADF,CAOG,IAAMU,MAPT,CADc,EAAf,CADH,CADF,CAeD","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport default function Tags({ tagsUpdated, key, tagChoices }) {\n  const [selectedTags, setSelectedTags] = useState([]);\n\n  useEffect(() => {\n    setSelectedTags([]);\n  }, [key]);\n\n  const tagChange = (e) => {\n    const value = e.target.value;\n    const alreadySelected = selectedTags.includes(value);\n    if (e.target.checked && !alreadySelected) {\n      setSelectedTags([...selectedTags, value]);\n    } else if (!e.target.checked && alreadySelected) {\n      setSelectedTags(selectedTags.filter((prevTag) => prevTag !== value));\n    }\n  };\n\n  useEffect(() => {\n    tagsUpdated(selectedTags);\n  }, [selectedTags, tagsUpdated]);\n\n  return (\n    <>\n      {tagChoices.map((choice, index) => (\n        <label className=\"checkbox-inline mr-3c checkbox-label\" key={index}>\n          <input\n            className=\"checkbox-button\"\n            type=\"checkbox\"\n            value={choice}\n            onChange={tagChange}\n          />\n          {\" \" + choice}\n        </label>\n      ))}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}