{"ast":null,"code":"var _jsxFileName = \"/Users/k4/test-apps/megane-system-test02/src/components/tableData/frame/FrameForm.js\";\nimport React, { useState } from \"react\";\nimport Tags from \"../tag/Tags\";\nimport { colorList } from \"../selectList/SelectList\";\nexport default function FrameForm({\n  frameAdded\n}) {\n  const [frameName, setFrameName] = useState(\"\");\n  const [productNumber, setProductNumber] = useState(\"\");\n  const [priceTaxExcluded, setPriceTaxExcluded] = useState(\"\");\n  const [priceTax, setPriceTax] = useState(\"\"); // const [frameType, setFrameType] = useState([]);\n  // const [series, setSeries] = useState([]);\n  // const [category, setCategory] = useState([]);\n\n  const [description, setDescription] = useState(\"\");\n  const [keywords, setKeywords] = useState(\"\");\n  const [targetCustomer, setTargetCustomer] = useState(\"\");\n  const [size, setSize] = useState(\"\");\n  const [weight, setWeight] = useState(\"\"); // const [nosePad, setNosePad] = useState([]);\n\n  const [materialFront, setMaterialFront] = useState([]);\n  const [materialTemple, setMaterialTemple] = useState([]);\n  const [color, setColor] = useState();\n  const [count, setCount] = useState(0);\n\n  const resetFrameForm = () => {\n    setFrameName(\"\");\n    setProductNumber(\"\");\n    setPriceTaxExcluded(\"\");\n    setPriceTax(\"\"); // setFrameType(\"\");\n    // setSeries(\"\");\n    // setCategory(\"\");\n\n    setDescription(\"\");\n    setKeywords(\"\");\n    setTargetCustomer(\"\");\n    setSize(\"\");\n    setWeight(\"\"); // setNosePad(\"\");\n    // setMaterialFront(\"\");\n    // setMaterialTemple(\"\");\n    // setColor(\"\");\n\n    setCount(count + 1);\n  };\n\n  const submitFrame = async e => {\n    e.preventDefault();\n\n    try {\n      await fetch(\"/api/frames\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          frameName,\n          productNumber,\n          priceTaxExcluded,\n          priceTax,\n          // frameType,\n          // series,\n          // category,\n          description,\n          keywords,\n          targetCustomer,\n          size,\n          weight,\n          // nosePad,\n          materialFront,\n          materialTemple,\n          color\n        })\n      });\n      resetFrameForm();\n      frameAdded();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const tagChoices = {\n    materialFrontChoices: [\"セル（アセテート）\", \"メタル（ステンレス・アルミ）\", \"セル（TR-90）\", \"メタル（チタン）\", \"PES\", \"ウルテム\", \"PPSU\", \"セルロイド\", \"その他\"],\n    materialTempleChoices: [\"セル（アセテート）\", \"メタル（ステンレス・アルミ）\", \"セル（TR-90）\", \"メタル（チタン）\", \"PES\", \"ウルテム\", \"PPSU\", \"セルロイド\", \"その他\"]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, \"\\u30D5\\u30EC\\u30FC\\u30E0\\u60C5\\u5831\\u3092\\u8FFD\\u52A0\\u3059\\u308B\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"\",\n    onSubmit: submitFrame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"frameName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"\\u54C1\\u540D\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"frameName\",\n    value: frameName,\n    className: \"form-control\",\n    onChange: e => setFrameName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"\\u54C1\\u756A\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"productNumber\",\n    value: productNumber,\n    className: \"form-control\",\n    onChange: e => setProductNumber(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, \"\\u5546\\u54C1\\u8AAC\\u660E\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"description\",\n    value: description,\n    className: \"form-control\",\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"keywords\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, \"\\u30AD\\u30FC\\u30EF\\u30FC\\u30C9\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"keywords\",\n    value: keywords,\n    className: \"form-control\",\n    onChange: e => setKeywords(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"targetCustomer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, \"\\u30BF\\u30FC\\u30B2\\u30C3\\u30C8\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"targetCustomer\",\n    value: targetCustomer,\n    className: \"form-control\",\n    onChange: e => setTargetCustomer(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, \"\\u30B5\\u30A4\\u30BA\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"size\",\n    value: size,\n    className: \"form-control\",\n    onChange: e => setSize(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"weight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, \"\\u30D5\\u30EC\\u30FC\\u30E0\\u306E\\u91CD\\u91CF\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"weight\",\n    value: weight,\n    className: \"form-control\",\n    onChange: e => setWeight(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"materialFront\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, \"\\u30D5\\u30EC\\u30FC\\u30E0\\u7D20\\u6750\\uFF08\\u30D5\\u30ED\\u30F3\\u30C8\\uFF09: \"), /*#__PURE__*/React.createElement(Tags, {\n    tagsUpdated: setMaterialFront,\n    key: count,\n    tagChoices: tagChoices.materialFrontChoices,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"materialTemple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, \"\\u30D5\\u30EC\\u30FC\\u30E0\\u7D20\\u6750\\uFF08\\u30C6\\u30F3\\u30D7\\u30EB\\uFF09\"), /*#__PURE__*/React.createElement(Tags, {\n    tagsUpdated: setMaterialTemple,\n    key: count,\n    tagChoices: tagChoices.materialTempleChoices,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }, \"\\u8FFD\\u52A0\\u3059\\u308B\"))));\n}","map":{"version":3,"sources":["/Users/k4/test-apps/megane-system-test02/src/components/tableData/frame/FrameForm.js"],"names":["React","useState","Tags","colorList","FrameForm","frameAdded","frameName","setFrameName","productNumber","setProductNumber","priceTaxExcluded","setPriceTaxExcluded","priceTax","setPriceTax","description","setDescription","keywords","setKeywords","targetCustomer","setTargetCustomer","size","setSize","weight","setWeight","materialFront","setMaterialFront","materialTemple","setMaterialTemple","color","setColor","count","setCount","resetFrameForm","submitFrame","e","preventDefault","fetch","method","body","JSON","stringify","err","console","error","tagChoices","materialFrontChoices","materialTempleChoices","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Tags from \"../tag/Tags\";\nimport { colorList } from \"../selectList/SelectList\";\n\nexport default function FrameForm({ frameAdded }) {\n  const [frameName, setFrameName] = useState(\"\");\n  const [productNumber, setProductNumber] = useState(\"\");\n  const [priceTaxExcluded, setPriceTaxExcluded] = useState(\"\");\n  const [priceTax, setPriceTax] = useState(\"\");\n  // const [frameType, setFrameType] = useState([]);\n  // const [series, setSeries] = useState([]);\n  // const [category, setCategory] = useState([]);\n  const [description, setDescription] = useState(\"\");\n  const [keywords, setKeywords] = useState(\"\");\n  const [targetCustomer, setTargetCustomer] = useState(\"\");\n  const [size, setSize] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n  // const [nosePad, setNosePad] = useState([]);\n  const [materialFront, setMaterialFront] = useState([]);\n  const [materialTemple, setMaterialTemple] = useState([]);\n  const [color, setColor] = useState();\n\n  const [count, setCount] = useState(0);\n\n  const resetFrameForm = () => {\n    setFrameName(\"\");\n    setProductNumber(\"\");\n    setPriceTaxExcluded(\"\");\n    setPriceTax(\"\");\n    // setFrameType(\"\");\n    // setSeries(\"\");\n    // setCategory(\"\");\n    setDescription(\"\");\n    setKeywords(\"\");\n    setTargetCustomer(\"\");\n    setSize(\"\");\n    setWeight(\"\");\n    // setNosePad(\"\");\n    // setMaterialFront(\"\");\n    // setMaterialTemple(\"\");\n    // setColor(\"\");\n    setCount(count + 1);\n  };\n\n  const submitFrame = async (e) => {\n    e.preventDefault();\n    try {\n      await fetch(\"/api/frames\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          frameName,\n          productNumber,\n          priceTaxExcluded,\n          priceTax,\n          // frameType,\n          // series,\n          // category,\n          description,\n          keywords,\n          targetCustomer,\n          size,\n          weight,\n          // nosePad,\n          materialFront,\n          materialTemple,\n          color,\n        }),\n      });\n      resetFrameForm();\n      frameAdded();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const tagChoices = {\n    materialFrontChoices: [\n      \"セル（アセテート）\",\n      \"メタル（ステンレス・アルミ）\",\n      \"セル（TR-90）\",\n      \"メタル（チタン）\",\n      \"PES\",\n      \"ウルテム\",\n      \"PPSU\",\n      \"セルロイド\",\n      \"その他\",\n    ],\n    materialTempleChoices: [\n      \"セル（アセテート）\",\n      \"メタル（ステンレス・アルミ）\",\n      \"セル（TR-90）\",\n      \"メタル（チタン）\",\n      \"PES\",\n      \"ウルテム\",\n      \"PPSU\",\n      \"セルロイド\",\n      \"その他\",\n    ],\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">フレーム情報を追加する</div>\n      <div className=\"card-body\">\n        <form className=\"\" onSubmit={submitFrame}>\n          <div className=\"form-group\">\n            <label htmlFor=\"frameName\">品名</label>\n            <input\n              type=\"text\"\n              name=\"frameName\"\n              value={frameName}\n              className=\"form-control\"\n              onChange={(e) => setFrameName(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"productNumber\">品番</label>\n            <input\n              type=\"text\"\n              name=\"productNumber\"\n              value={productNumber}\n              className=\"form-control\"\n              onChange={(e) => setProductNumber(e.target.value)}\n            />\n          </div>\n          {/* <div className=\"form-group\">\n            <label htmlFor=\"priceTaxExcluded\">価格（税抜）</label>\n            <input\n              type=\"number\"\n              name=\"priceTaxExcluded\"\n              value={priceTaxExcluded}\n              className=\"form-control\"\n              onChange={(e) => setPriceTaxExcluded(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"priceTax\">価格（税込）</label>\n            <input\n              type=\"number\"\n              name=\"priceTax\"\n              value={priceTax}\n              className=\"form-control\"\n              onChange={(e) => setPriceTax(e.target.value)}\n            />\n          </div> */}\n          {/* <div className=\"form-group\">\n            <label htmlFor=\"frameType\">フレームタイプ</label>\n            <input\n              type=\"text\"\n              name=\"frameType\"\n              value={frameType}\n              className=\"form-control\"\n              onChange={(e) => setFrameType(e.target.value)}\n            />\n            <Tags tagsUpdated={setFrameType} key={count} />\n          </div> */}\n          {/* <div className=\"form-group\">\n            <label htmlFor=\"series\">シリーズ</label>\n            <input\n              type=\"text\"\n              name=\"series\"\n              value={series}\n              className=\"form-control\"\n              onChange={(e) => setSeries(e.target.value)}\n            />\n          </div> */}\n          {/* <div className=\"form-group\">\n            <label htmlFor=\"cateory\">カテゴリ</label>\n            <input\n              type=\"text\"\n              name=\"category\"\n              value={category}\n              className=\"form-control\"\n              onChange={(e) => setCategory(e.target.value)}\n            />\n          </div> */}\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">商品説明</label>\n            <input\n              type=\"text\"\n              name=\"description\"\n              value={description}\n              className=\"form-control\"\n              onChange={(e) => setDescription(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"keywords\">キーワード</label>\n            <input\n              type=\"text\"\n              name=\"keywords\"\n              value={keywords}\n              className=\"form-control\"\n              onChange={(e) => setKeywords(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"targetCustomer\">ターゲット</label>\n            <input\n              type=\"text\"\n              name=\"targetCustomer\"\n              value={targetCustomer}\n              className=\"form-control\"\n              onChange={(e) => setTargetCustomer(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"size\">サイズ</label>\n            <input\n              type=\"text\"\n              name=\"size\"\n              value={size}\n              className=\"form-control\"\n              onChange={(e) => setSize(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"weight\">フレームの重量</label>\n            <input\n              type=\"text\"\n              name=\"weight\"\n              value={weight}\n              className=\"form-control\"\n              onChange={(e) => setWeight(e.target.value)}\n            />\n          </div>\n          {/* <div className=\"form-group\">\n            <label htmlFor=\"targetNosePad\">鼻パッドの形状</label>\n            <input\n              type=\"text\"\n              name=\"nosePad\"\n              value={nosePad}\n              className=\"form-control\"\n              onChange={(e) => setNosePad(e.target.value)}\n            />\n          </div> */}\n          <div className=\"form-group\">\n            <label htmlFor=\"materialFront\">フレーム素材（フロント）: </label>\n            {/* <input\n              type=\"text\"\n              name=\"materialFront\"\n              value={materialFront}\n              className=\"form-control\"\n              onChange={(e) => setMaterialFront(e.target.value)}\n            /> */}\n            <Tags\n              tagsUpdated={setMaterialFront}\n              key={count}\n              tagChoices={tagChoices.materialFrontChoices}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"materialTemple\">フレーム素材（テンプル）</label>\n            {/* <input\n              type=\"text\"\n              name=\"materialTemple\"\n              value={materialTemple}\n              className=\"form-control\"\n              onChange={(e) => setMaterialTemple(e.target.value)}\n            /> */}\n            <Tags\n              tagsUpdated={setMaterialTemple}\n              key={count}\n              tagChoices={tagChoices.materialTempleChoices}\n            />\n          </div>\n          {/* <div className=\"form-group\">\n            <label htmlFor=\"Color\">カラー</label>\n            <select\n              onChange={(e) => setColor(e.target.value)}\n              className=\"form-control\"\n              name=\"color\"\n            >\n              {colorList.map((color, index) => (\n                <option value={color} key={index}>\n                  {color}\n                </option>\n              ))}\n            </select>\n          </div> */}\n          <button type=\"submit\" className=\"btn btn-primary\">\n            追加する\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}