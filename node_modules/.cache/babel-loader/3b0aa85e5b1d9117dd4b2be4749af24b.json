{"ast":null,"code":"var _jsxFileName = \"/Users/k4/test-apps/megane-system-test02/src/components/tableData/tag/Tags.js\";\nimport React, { useState, useEffect } from \"react\";\nexport default function Tags({\n  materialFrontUpdated,\n  key\n}) {\n  // const tagChoices = [\n  //   \"セル（アセテート）\",\n  //   \"メタル（ステンレス・アルミ）\",\n  //   \"セル（TR-90）\",\n  //   \"メタル（チタン）\",\n  //   \"PES\",\n  //   \"ウルテム\",\n  //   \"PPSU\",\n  //   \"セルロイド\",\n  //   \"その他\",\n  // ];\n  const tagChoices = {\n    materialFrontChoices: [\"セル（アセテート）\", \"メタル（ステンレス・アルミ）\", \"セル（TR-90）\", \"メタル（チタン）\", \"PES\", \"ウルテム\", \"PPSU\", \"セルロイド\", \"その他\"]\n  };\n  const [selectedTags, setSelectedTags] = useState([]);\n  useEffect(() => {\n    setSelectedTags([]);\n  }, [key]);\n\n  const tagChange = e => {\n    const value = e.target.value;\n    const alreadySelected = selectedTags.includes(value);\n\n    if (e.target.checked && !alreadySelected) {\n      setSelectedTags([...selectedTags, value]);\n    } else if (!e.target.checked && alreadySelected) {\n      setSelectedTags(selectedTags.filter(prevTag => prevTag !== value));\n    }\n  };\n\n  useEffect(() => {\n    materialFrontUpdated(selectedTags);\n  }, [selectedTags, materialFrontUpdated]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, tagChoices.map((choice, index) => /*#__PURE__*/React.createElement(\"label\", {\n    className: \"checkbox-inline mr-3\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    value: choice,\n    onChange: tagChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), \" \" + choice)));\n}","map":{"version":3,"sources":["/Users/k4/test-apps/megane-system-test02/src/components/tableData/tag/Tags.js"],"names":["React","useState","useEffect","Tags","materialFrontUpdated","key","tagChoices","materialFrontChoices","selectedTags","setSelectedTags","tagChange","e","value","target","alreadySelected","includes","checked","filter","prevTag","map","choice","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,oBAAF;AAAwBC,EAAAA;AAAxB,CAAd,EAA6C;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAMC,UAAU,GAAG;AACjBC,IAAAA,oBAAoB,EAAE,CACpB,WADoB,EAEpB,gBAFoB,EAGpB,WAHoB,EAIpB,UAJoB,EAKpB,KALoB,EAMpB,MANoB,EAOpB,MAPoB,EAQpB,OARoB,EASpB,KAToB;AADL,GAAnB;AAcA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,eAAe,CAAC,EAAD,CAAf;AACD,GAFQ,EAEN,CAACJ,GAAD,CAFM,CAAT;;AAIA,QAAMK,SAAS,GAAIC,CAAD,IAAO;AACvB,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,UAAME,eAAe,GAAGN,YAAY,CAACO,QAAb,CAAsBH,KAAtB,CAAxB;;AACA,QAAID,CAAC,CAACE,MAAF,CAASG,OAAT,IAAoB,CAACF,eAAzB,EAA0C;AACxCL,MAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBI,KAAlB,CAAD,CAAf;AACD,KAFD,MAEO,IAAI,CAACD,CAAC,CAACE,MAAF,CAASG,OAAV,IAAqBF,eAAzB,EAA0C;AAC/CL,MAAAA,eAAe,CAACD,YAAY,CAACS,MAAb,CAAqBC,OAAD,IAAaA,OAAO,KAAKN,KAA7C,CAAD,CAAf;AACD;AACF,GARD;;AAUAV,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,oBAAoB,CAACI,YAAD,CAApB;AACD,GAFQ,EAEN,CAACA,YAAD,EAAeJ,oBAAf,CAFM,CAAT;AAIA,sBACE,0CACGE,UAAU,CAACa,GAAX,CAAe,CAACC,MAAD,EAASC,KAAT,kBACd;AAAO,IAAA,SAAS,EAAC,sBAAjB;AAAwC,IAAA,GAAG,EAAEA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,KAAK,EAAED,MAA9B;AAAsC,IAAA,QAAQ,EAAEV,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEG,MAAMU,MAFT,CADD,CADH,CADF;AAUD","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport default function Tags({ materialFrontUpdated, key }) {\n  // const tagChoices = [\n  //   \"セル（アセテート）\",\n  //   \"メタル（ステンレス・アルミ）\",\n  //   \"セル（TR-90）\",\n  //   \"メタル（チタン）\",\n  //   \"PES\",\n  //   \"ウルテム\",\n  //   \"PPSU\",\n  //   \"セルロイド\",\n  //   \"その他\",\n  // ];\n  const tagChoices = {\n    materialFrontChoices: [\n      \"セル（アセテート）\",\n      \"メタル（ステンレス・アルミ）\",\n      \"セル（TR-90）\",\n      \"メタル（チタン）\",\n      \"PES\",\n      \"ウルテム\",\n      \"PPSU\",\n      \"セルロイド\",\n      \"その他\",\n    ],\n  };\n\n  const [selectedTags, setSelectedTags] = useState([]);\n\n  useEffect(() => {\n    setSelectedTags([]);\n  }, [key]);\n\n  const tagChange = (e) => {\n    const value = e.target.value;\n    const alreadySelected = selectedTags.includes(value);\n    if (e.target.checked && !alreadySelected) {\n      setSelectedTags([...selectedTags, value]);\n    } else if (!e.target.checked && alreadySelected) {\n      setSelectedTags(selectedTags.filter((prevTag) => prevTag !== value));\n    }\n  };\n\n  useEffect(() => {\n    materialFrontUpdated(selectedTags);\n  }, [selectedTags, materialFrontUpdated]);\n\n  return (\n    <>\n      {tagChoices.map((choice, index) => (\n        <label className=\"checkbox-inline mr-3\" key={index}>\n          <input type=\"checkbox\" value={choice} onChange={tagChange} />\n          {\" \" + choice}\n        </label>\n      ))}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}