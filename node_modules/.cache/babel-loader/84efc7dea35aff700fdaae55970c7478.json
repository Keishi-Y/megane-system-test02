{"ast":null,"code":"var _jsxFileName = \"/Users/k4/test-apps/megane-system-test02/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport { ProtectedRoute } from \"./components/auth/ProtectedRoute\";\nimport ClinicCharts from \"./pages/ClinicCharts\";\nimport FrameInfo from \"./pages/FrameInfo\";\nimport { Layout } from \"./components/layout/Layout\";\nimport AppInfo from \"./pages/AppInfo\";\nimport AccountInfo from \"./pages/AccountInfo\";\nimport CreateFrameInfo from \"./pages/CreateFrameInfo\";\n\nfunction App() {\n  const {\n    isLoading\n  } = useAuth0();\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const [frames, setFrames] = useState([]);\n\n  const loadFrames = async () => {\n    try {\n      const res = await fetch(\"/api/frames\");\n      const frames = await res.json();\n      setFrames(frames);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    loadFrames();\n  }, []);\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    path: \"/clinic-charts\",\n    component: ClinicCharts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    path: \"/frame-info\",\n    component: FrameInfo,\n    render: () => /*#__PURE__*/React.createElement(FrameInfo, {\n      frames: frames,\n      loadFrames: loadFrames,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 27\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    path: \"/create-frame-info\",\n    exact: true,\n    component: CreateFrameInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    path: \"/account-info\",\n    exact: true,\n    component: AccountInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/app-info\",\n    exact: true,\n    component: AppInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/k4/test-apps/megane-system-test02/src/App.js"],"names":["React","useEffect","useState","useAuth0","Route","BrowserRouter","Router","Switch","Home","ProtectedRoute","ClinicCharts","FrameInfo","Layout","AppInfo","AccountInfo","CreateFrameInfo","App","isLoading","frames","setFrames","loadFrames","res","fetch","json","error","console"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport { ProtectedRoute } from \"./components/auth/ProtectedRoute\";\nimport ClinicCharts from \"./pages/ClinicCharts\";\nimport FrameInfo from \"./pages/FrameInfo\";\nimport { Layout } from \"./components/layout/Layout\";\nimport AppInfo from \"./pages/AppInfo\";\nimport AccountInfo from \"./pages/AccountInfo\";\nimport CreateFrameInfo from \"./pages/CreateFrameInfo\";\n\nfunction App() {\n  const { isLoading } = useAuth0();\n  if (isLoading) {\n    return <p></p>;\n  }\n  const [frames, setFrames] = useState([]);\n\n  const loadFrames = async () => {\n    try {\n      const res = await fetch(\"/api/frames\");\n      const frames = await res.json();\n      setFrames(frames);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    loadFrames();\n  }, []);\n  return (\n    <Router>\n      <Layout>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <ProtectedRoute path=\"/clinic-charts\" component={ClinicCharts} />\n          <ProtectedRoute\n            path=\"/frame-info\"\n            component={FrameInfo}\n            render={() => <FrameInfo frames={frames} loadFrames={loadFrames} />}\n          />\n          <ProtectedRoute\n            path=\"/create-frame-info\"\n            exact\n            component={CreateFrameInfo}\n          />\n          <ProtectedRoute path=\"/account-info\" exact component={AccountInfo} />\n          <Route path=\"/app-info\" exact component={AppInfo} />\n        </Switch>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}