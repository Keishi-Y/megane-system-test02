{"ast":null,"code":"var _jsxFileName = \"/Users/k4/test-apps/megane-system-test02/src/components/tableData/chart/ChartList.js\";\nimport React, { useState } from \"react\";\nimport Chart from \"./Chart\";\nexport default function ChartList({\n  charts,\n  refreshCharts\n}) {\n  const [data, setData] = useState([]);\n\n  const handleSortByAscend = key => {\n    const line = charts.sort((a, b) => {\n      if (a[key] < b[key]) return -1;\n      if (a[key] > b[key]) return 1;\n      return 0;\n    });\n    setData({\n      data: line\n    });\n  };\n\n  const handleSortByDescend = key => {\n    const line = charts.sort((a, b) => {\n      if (a[key] < b[key]) return 1;\n      if (a[key] > b[key]) return -1;\n      return 0;\n    });\n    setData({\n      data: line\n    });\n  };\n\n  console.log(charts);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"mt-5 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"\\u30AB\\u30EB\\u30C6\\u4E00\\u89A7\"), /*#__PURE__*/React.createElement(SortButton, {\n    onSortByAscend: handleSortByAscend,\n    onSortByDescend: handleSortByDescend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, charts.map(chart => /*#__PURE__*/React.createElement(Chart, {\n    chart: chart,\n    key: chart.id,\n    refreshCharts: refreshCharts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/k4/test-apps/megane-system-test02/src/components/tableData/chart/ChartList.js"],"names":["React","useState","Chart","ChartList","charts","refreshCharts","data","setData","handleSortByAscend","key","line","sort","a","b","handleSortByDescend","console","log","map","chart","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAnB,EAA8C;AAC3D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMO,kBAAkB,GAAIC,GAAD,IAAS;AAClC,UAAMC,IAAI,GAAGN,MAAM,CAACO,IAAP,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACjC,UAAID,CAAC,CAACH,GAAD,CAAD,GAASI,CAAC,CAACJ,GAAD,CAAd,EAAqB,OAAO,CAAC,CAAR;AACrB,UAAIG,CAAC,CAACH,GAAD,CAAD,GAASI,CAAC,CAACJ,GAAD,CAAd,EAAqB,OAAO,CAAP;AACrB,aAAO,CAAP;AACD,KAJY,CAAb;AAKAF,IAAAA,OAAO,CAAC;AACND,MAAAA,IAAI,EAAEI;AADA,KAAD,CAAP;AAGD,GATD;;AAUA,QAAMI,mBAAmB,GAAIL,GAAD,IAAS;AACnC,UAAMC,IAAI,GAAGN,MAAM,CAACO,IAAP,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACjC,UAAID,CAAC,CAACH,GAAD,CAAD,GAASI,CAAC,CAACJ,GAAD,CAAd,EAAqB,OAAO,CAAP;AACrB,UAAIG,CAAC,CAACH,GAAD,CAAD,GAASI,CAAC,CAACJ,GAAD,CAAd,EAAqB,OAAO,CAAC,CAAR;AACrB,aAAO,CAAP;AACD,KAJY,CAAb;AAKAF,IAAAA,OAAO,CAAC;AACND,MAAAA,IAAI,EAAEI;AADA,KAAD,CAAP;AAGD,GATD;;AAUAK,EAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,eAEE,oBAAC,UAAD;AACE,IAAA,cAAc,EAAEI,kBADlB;AAEE,IAAA,eAAe,EAAEM,mBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAME;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,MAAM,CAACa,GAAP,CAAYC,KAAD,iBACV,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEA,KAAd;AAAqB,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAhC;AAAoC,IAAA,aAAa,EAAEd,aAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CANF,CADF;AAcD","sourcesContent":["import React, { useState } from \"react\";\nimport Chart from \"./Chart\";\n\nexport default function ChartList({ charts, refreshCharts }) {\n  const [data, setData] = useState([]);\n\n  const handleSortByAscend = (key) => {\n    const line = charts.sort((a, b) => {\n      if (a[key] < b[key]) return -1;\n      if (a[key] > b[key]) return 1;\n      return 0;\n    });\n    setData({\n      data: line,\n    });\n  };\n  const handleSortByDescend = (key) => {\n    const line = charts.sort((a, b) => {\n      if (a[key] < b[key]) return 1;\n      if (a[key] > b[key]) return -1;\n      return 0;\n    });\n    setData({\n      data: line,\n    });\n  };\n  console.log(charts);\n  return (\n    <div>\n      <h2 className=\"mt-5 mb-3\">カルテ一覧</h2>\n      <SortButton\n        onSortByAscend={handleSortByAscend}\n        onSortByDescend={handleSortByDescend}\n      />\n      <div className=\"list-group\">\n        {charts.map((chart) => (\n          <Chart chart={chart} key={chart.id} refreshCharts={refreshCharts} />\n        ))}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}