{"version":3,"sources":["pages/Home.js","components/auth/ProtectedRoute.js","components/tableData/chart/Chart.js","components/tableData/chart/ChartList.js","components/tableData/chart/ChartForm.js","pages/ClinicCharts.js","components/tableData/frame/Frame.js","components/tableData/frame/FrameList.js","components/tableData/tag/Tags.js","components/tableData/frame/FrameForm.js","pages/FrameInfo.js","components/auth/LoginButton.js","components/user/UserProfileAvatar.js","components/user/UserProfileDropdown.js","components/layout/Header.js","components/text/TextWithIcon.js","components/layout/Links.js","components/layout/Layout.js","pages/AppInfo.js","pages/AccountInfo.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","ProtectedRoute","component","args","withAuthenticationRequired","Chart","chart","refreshCharts","deleteChart","a","fetch","method","body","JSON","stringify","id","console","error","name","birthday","tel","email","address","firstVisit","lastVisit","onClick","ChartList","charts","map","key","ChartForm","chartAdded","useState","setName","setBirthday","setTel","setEmail","setAddress","setFirstVisit","setLastVisit","submitChart","e","preventDefault","onSubmit","htmlFor","type","value","onChange","target","ClinicCharts","setCharts","loadCharts","res","json","useEffect","Frame","frame","refreshFrames","deleteFrame","frameName","productNumber","parseInt","priceTaxExcluded","toLocaleString","targetGender","frameType","series","category","weight","nosePad","materialFront","material","index","materialTemple","color","FrameList","frames","Tags","tagsUpdated","tagChoices","selectedTags","setSelectedTags","tagChange","alreadySelected","includes","checked","filter","prevTag","choice","FrameForm","frameAdded","setFrameName","setProductNumber","setPriceTaxExcluded","setTargetGender","setFrameType","setSeries","setCategory","setWeight","setNosePad","setMaterialFront","setMaterialTemple","setColor","count","setCount","submitFrame","window","alert","selectList","targetGenderList","frameTypeList","seriesList","categoryList","nosePadList","materialChoices","colorList","FrameInfo","setFrames","loadFrames","LoginButton","useAuth0","isAuthenticated","loginWithRedirect","Button","UserProfileAvatar","props","user","Image","style","width","src","picture","roundedCircle","UserProfileDropdown","logout","NavDropdown","alignRight","title","Dropdown","Header","Divider","Item","returnTo","location","origin","Navbar","borderBottom","height","marginBottom","bg","expand","Brand","href","config","TextWithIcon","icon","text","paddingRight","LinkItem","pathname","pageName","history","useHistory","useLocation","Nav","Link","push","Links","Layout","children","Container","Row","Col","xs","minWidth","AppInfo","AccountInfo","nickname","App","isLoading","path","exact","Boolean","hostname","match","ReactDOM","render","StrictMode","domain","process","clientId","redirectUri","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6533038f.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div className=\"mt-5\">\n      <h1 className=\"text-center mb-5\">HOME</h1>\n\n      <div>\n        <p>\n          アプリのホーム画面です。カルテ編集画面にアクセスするためにはログインが必要です。\n        </p>\n        <p>\n          ログインせずに左側ナビゲーションバーの「カルテ情報」「アカウント情報」をクリックすると、ログイン画面(Auth0)にリダイレクトされます。\n        </p>\n        <p>初回アクセス時はサインアップをしてください。</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { withAuthenticationRequired } from \"@auth0/auth0-react\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nexport function ProtectedRoute({ component, ...args }) {\n  return (\n    <Route component={withAuthenticationRequired(component, {})} {...args} />\n  );\n}\n","import React from \"react\";\n\nexport default function Chart({ chart, refreshCharts }) {\n  // const formatted_birthday = record.birthday.replace(/-/g, \" / \");\n\n  const deleteChart = async () => {\n    try {\n      await fetch(\"/api/charts\", {\n        method: \"DELETE\",\n        body: JSON.stringify({ id: chart.id }),\n      });\n      refreshCharts();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"list-group-item\">\n      <h4 className=\"list-group-item-heading mt-4 mb-4\">\n        お名前：{chart.name}\n      </h4>\n      <p className=\"list-group-item-heading\">生年月日：{chart.birthday}</p>\n      <p className=\"list-group-item-heading\">電話番号：{chart.tel}</p>\n      <p className=\"list-group-item-heading\">メールアドレス：{chart.email}</p>\n      <p className=\"list-group-item-heading\">住所：{chart.address}</p>\n      <p className=\"list-group-item-heading\">初回来店日：{chart.firstVisit}</p>\n      <p className=\"list-group-item-heading\">最終来店日：{chart.lastVisit}</p>\n      <button className=\"btn btn-sm btn-danger ml-2\" onClick={deleteChart}>\n        削除\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Chart from \"./Chart\";\n\nexport default function ChartList({ charts, refreshCharts }) {\n  return (\n    <div>\n      <h2 className=\"mt-5 mb-3\">カルテ一覧</h2>\n      <div className=\"list-group\">\n        {charts.map((chart) => (\n          <Chart chart={chart} key={chart.id} refreshCharts={refreshCharts} />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function ChartForm({ chartAdded }) {\n  const [name, setName] = useState(\"\");\n  const [birthday, setBirthday] = useState(\"\");\n  const [tel, setTel] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [firstVisit, setFirstVisit] = useState(\"\");\n  const [lastVisit, setLastVisit] = useState(\"\");\n\n  const resetForm = () => {\n    setName(\"\");\n    setBirthday(\"\");\n    setTel(\"\");\n    setEmail(\"\");\n    setAddress(\"\");\n    setFirstVisit(\"\");\n    setLastVisit(\"\");\n  };\n\n  const submitChart = async (e) => {\n    e.preventDefault();\n    try {\n      await fetch(\"/api/charts\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name,\n          birthday,\n          tel,\n          email,\n          address,\n          firstVisit,\n          lastVisit,\n        }),\n      });\n      resetForm();\n      chartAdded();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">カルテを追加する</div>\n      <div className=\"card-body\">\n        <form className=\"\" onSubmit={submitChart}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">名前</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              className=\"form-control\"\n              onChange={(e) => setName(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"birthday\">生年月日</label>\n            <input\n              type=\"date\"\n              name=\"birthday\"\n              value={birthday}\n              className=\"form-control\"\n              onChange={(e) => setBirthday(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"tel\">電話番号</label>\n            <input\n              type=\"tel\"\n              name=\"tel\"\n              value={tel}\n              className=\"form-control\"\n              onChange={(e) => setTel(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"tel\">メールアドレス</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              className=\"form-control\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"address\">住所</label>\n            <input\n              type=\"text\"\n              name=\"address\"\n              value={address}\n              className=\"form-control\"\n              onChange={(e) => setAddress(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"firstVisit\">初回来店日</label>\n            <input\n              type=\"date\"\n              name=\"firstVisit\"\n              value={firstVisit}\n              className=\"form-control\"\n              onChange={(e) => setFirstVisit(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"lastVisit\">最終来店日</label>\n            <input\n              type=\"date\"\n              name=\"lastVisit\"\n              value={lastVisit}\n              className=\"form-control\"\n              onChange={(e) => setLastVisit(e.target.value)}\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            追加する\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport ChartList from \"../components/tableData/chart/ChartList\";\nimport ChartForm from \"../components/tableData/chart/ChartForm\";\n\nconst ClinicCharts = () => {\n  const [charts, setCharts] = useState([]);\n\n  const loadCharts = async () => {\n    try {\n      const res = await fetch(\"/api/charts\");\n      const charts = await res.json();\n      setCharts(charts);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    loadCharts();\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"mb-5 text-center\">カルテ編集</h1>\n      <div className=\"container mt-5 mb-5\">\n        <ChartForm chartAdded={loadCharts} />\n        <ChartList charts={charts} refreshCharts={loadCharts} />\n      </div>\n    </div>\n  );\n};\n\nexport default ClinicCharts;\n","import React from \"react\";\n\nexport default function Frame({ frame, refreshFrames }) {\n  // const formatted_birthday = record.birthday.replace(/-/g, \" / \");\n\n  const deleteFrame = async () => {\n    try {\n      await fetch(\"/api/frames\", {\n        method: \"DELETE\",\n        body: JSON.stringify({ id: frame.id }),\n      });\n      refreshFrames();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"list-group-item\">\n      <h4 className=\"list-group-item-heading mt-4 mb-4\">\n        商品名：{frame.frameName}\n      </h4>\n      <p className=\"list-group-item-heading\">品番：{frame.productNumber}</p>\n      <p className=\"list-group-item-heading\">\n        価格（税抜）：￥ {parseInt(frame.priceTaxExcluded).toLocaleString()}\n      </p>\n      <p className=\"list-group-item-heading\">\n        価格（税込）：￥{\" \"}\n        {parseInt(frame.priceTaxExcluded * 1.1).toLocaleString()}\n      </p>\n      <p className=\"list-group-item-heading\">性別：{frame.targetGender}</p>\n      <p className=\"list-group-item-heading\">\n        フレームタイプ：{frame.frameType}\n      </p>\n      <p className=\"list-group-item-heading\">シリーズ：{frame.series}</p>\n      <p className=\"list-group-item-heading\">カテゴリ：{frame.category}</p>\n      {/* <p className=\"list-group-item-heading\">商品説明：{frame.description}</p> */}\n      {/* <p className=\"list-group-item-heading\">キーワード：{frame.keywords}</p> */}\n      {/* <p className=\"list-group-item-heading\">サイズ：{frame.size}</p> */}\n      <p className=\"list-group-item-heading\">フレームの重さ：{frame.weight}</p>\n      <p className=\"list-group-item-heading\">鼻パッドの形状：{frame.nosePad}</p>\n      <p className=\"list-group-item-heading\">\n        フレーム素材（フロント）：{\"\"}\n        {frame.materialFront &&\n          frame.materialFront.map((material, index) => (\n            <span className=\"badge badge-primary mr-2\" key={index}>\n              {material}\n            </span>\n          ))}\n      </p>\n      <p className=\"list-group-item-heading\">\n        フレーム素材（テンプル）：{\" \"}\n        {frame.materialTemple &&\n          frame.materialTemple.map((material, index) => (\n            <span className=\"badge badge-primary mr-2\" key={index}>\n              {material}\n            </span>\n          ))}\n      </p>\n      <p className=\"list-group-item-heading\">カラー：{frame.color}</p>\n      <button className=\"btn btn-sm btn-danger ml-2\" onClick={deleteFrame}>\n        削除\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Frame from \"./Frame\";\n\nexport default function FrameList({ frames, refreshFrames }) {\n  return (\n    <div>\n      <h2 className=\"mt-5 mb-3\">フレーム情報一覧</h2>\n      <div className=\"list-group\">\n        {frames.map((frame) => (\n          <Frame frame={frame} key={frame.id} refreshFrames={refreshFrames} />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nexport default function Tags({ tagsUpdated, key, tagChoices }) {\n  const [selectedTags, setSelectedTags] = useState([]);\n\n  useEffect(() => {\n    setSelectedTags([]);\n  }, [key]);\n\n  const tagChange = (e) => {\n    const value = e.target.value;\n    const alreadySelected = selectedTags.includes(value);\n    if (e.target.checked && !alreadySelected) {\n      setSelectedTags([...selectedTags, value]);\n    } else if (!e.target.checked && alreadySelected) {\n      setSelectedTags(selectedTags.filter((prevTag) => prevTag !== value));\n    }\n  };\n\n  useEffect(() => {\n    tagsUpdated(selectedTags);\n  }, [selectedTags, tagsUpdated]);\n\n  return (\n    <>\n      {tagChoices.map((choice, index) => (\n        <label className=\"checkbox-inline mr-3c checkbox-label\" key={index}>\n          <input\n            className=\"checkbox-button\"\n            type=\"checkbox\"\n            value={choice}\n            onChange={tagChange}\n          />\n          {\" \" + choice}\n        </label>\n      ))}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport Tags from \"../tag/Tags\";\nimport selectList from \"../selectList/SelectList.json\";\n\nexport default function FrameForm({ frameAdded }) {\n  const [frameName, setFrameName] = useState(\"\");\n  const [productNumber, setProductNumber] = useState(\"\");\n  const [priceTaxExcluded, setPriceTaxExcluded] = useState(\"\");\n  const [targetGender, setTargetGender] = useState([]);\n  const [frameType, setFrameType] = useState([]);\n  const [series, setSeries] = useState([]);\n  const [category, setCategory] = useState([]);\n  // const [description, setDescription] = useState(\"\");\n  // const [keywords, setKeywords] = useState(\"\");\n  // const [size, setSize] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n  const [nosePad, setNosePad] = useState([]);\n  const [materialFront, setMaterialFront] = useState([]);\n  const [materialTemple, setMaterialTemple] = useState([]);\n  const [color, setColor] = useState([]);\n\n  const [count, setCount] = useState(0);\n\n  const resetFrameForm = () => {\n    setFrameName(\"\");\n    setProductNumber(\"\");\n    setPriceTaxExcluded(\"\");\n    setTargetGender(\"\");\n    setFrameType(\"\");\n    setSeries(\"\");\n    setCategory(\"\");\n    // setDescription(\"\");\n    // setKeywords(\"\");\n    // setSize(\"\");\n    setWeight(\"\");\n    setNosePad(\"\");\n    setMaterialFront(\"\");\n    setMaterialTemple(\"\");\n    setColor(\"\");\n    setCount(count + 1);\n  };\n\n  const submitFrame = async (e) => {\n    e.preventDefault();\n    try {\n      await fetch(\"/api/frames\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          frameName,\n          productNumber,\n          priceTaxExcluded,\n          targetGender,\n          frameType,\n          series,\n          category,\n          // description,\n          // keywords,\n          // size,\n          weight,\n          nosePad,\n          materialFront,\n          materialTemple,\n          color,\n        }),\n      });\n      resetFrameForm();\n      frameAdded();\n    } catch (err) {\n      console.error(err);\n      window.alert(\"投稿エラーです\");\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">フレーム情報を追加する</div>\n      <div className=\"card-body\">\n        <form className=\"\" onSubmit={submitFrame}>\n          <div className=\"form-group\">\n            <label htmlFor=\"frameName\">品名</label>\n            <input\n              type=\"text\"\n              name=\"frameName\"\n              value={frameName}\n              className=\"form-control\"\n              onChange={(e) => setFrameName(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"productNumber\">品番</label>\n            <input\n              type=\"text\"\n              name=\"productNumber\"\n              value={productNumber}\n              className=\"form-control\"\n              onChange={(e) => setProductNumber(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"priceTaxExcluded\">価格（税抜）</label>\n            <input\n              type=\"text\"\n              name=\"priceTaxExcluded\"\n              value={priceTaxExcluded}\n              className=\"form-control\"\n              onChange={(e) => setPriceTaxExcluded(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"targetGender\">性別</label>\n            <select\n              onChange={(e) => setTargetGender(e.target.value)}\n              className=\"form-control\"\n              name=\"targetGender\"\n            >\n              {selectList.targetGenderList.map((targetGender, index) => (\n                <option value={targetGender} key={index}>\n                  {targetGender}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"frameType\">フレームタイプ</label>\n            <select\n              onChange={(e) => setFrameType(e.target.value)}\n              className=\"form-control\"\n              name=\"frameType\"\n            >\n              {selectList.frameTypeList.map((frameType, index) => (\n                <option value={frameType} key={index}>\n                  {frameType}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"series\">シリーズ</label>\n            <select\n              onChange={(e) => setSeries(e.target.value)}\n              className=\"form-control\"\n              name=\"series\"\n            >\n              {selectList.seriesList.map((series, index) => (\n                <option value={series} key={index}>\n                  {series}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"category\">カテゴリー</label>\n            <select\n              onChange={(e) => setCategory(e.target.value)}\n              className=\"form-control\"\n              name=\"category\"\n            >\n              {selectList.categoryList.map((category, index) => (\n                <option value={category} key={index}>\n                  {category}\n                </option>\n              ))}\n            </select>\n          </div>\n          {/* <div className=\"form-group\">\n            <label htmlFor=\"description\">商品説明</label>\n            <input\n              type=\"text\"\n              name=\"description\"\n              value={description}\n              className=\"form-control\"\n              onChange={(e) => setDescription(e.target.value)}\n            />\n          </div> */}\n          {/* <div className=\"form-group\">\n            <label htmlFor=\"keywords\">キーワード</label>\n            <input\n              type=\"text\"\n              name=\"keywords\"\n              value={keywords}\n              className=\"form-control\"\n              onChange={(e) => setKeywords(e.target.value)}\n            />\n          </div> */}\n          {/* <div className=\"form-group\">\n            <label htmlFor=\"size\">サイズ</label>\n            <input\n              type=\"text\"\n              name=\"size\"\n              value={size}\n              className=\"form-control\"\n              onChange={(e) => setSize(e.target.value)}\n            />\n          </div> */}\n          <div className=\"form-group\">\n            <label htmlFor=\"weight\">フレームの重量</label>\n            <input\n              type=\"text\"\n              name=\"weight\"\n              value={weight}\n              className=\"form-control\"\n              onChange={(e) => setWeight(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"targetNosePad\">鼻パッドの形状</label>\n            <select\n              onChange={(e) => setNosePad(e.target.value)}\n              className=\"form-control\"\n              name=\"nosePad\"\n            >\n              {selectList.nosePadList.map((nosePad, index) => (\n                <option value={nosePad} key={index}>\n                  {nosePad}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"materialFront\">フレーム素材（フロント）: </label>\n            <Tags\n              tagsUpdated={setMaterialFront}\n              key={count}\n              tagChoices={selectList.materialChoices}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"materialTemple\">フレーム素材（テンプル）：</label>\n            <Tags\n              tagsUpdated={setMaterialTemple}\n              key={count}\n              tagChoices={selectList.materialChoices}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Color\">カラー</label>\n            <select\n              onChange={(e) => setColor(e.target.value)}\n              className=\"form-control\"\n              name=\"color\"\n            >\n              {selectList.colorList.map((color, index) => (\n                <option value={color} key={index}>\n                  {color}\n                </option>\n              ))}\n            </select>\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            追加する\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport FrameList from \"../components/tableData/frame/FrameList\";\nimport FrameForm from \"../components/tableData/frame/FrameForm\";\n\nconst FrameInfo = () => {\n  const [frames, setFrames] = useState([]);\n\n  const loadFrames = async () => {\n    try {\n      const res = await fetch(\"/api/frames\");\n      const frames = await res.json();\n      setFrames(frames);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    loadFrames();\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"mb-5 text-center\">フレーム情報編集</h1>\n      <div className=\"container mt-5 mb-5\">\n        <FrameForm frameAdded={loadFrames} />\n        <FrameList frames={frames} refreshFrames={loadFrames} />\n      </div>\n    </div>\n  );\n};\n\nexport default FrameInfo;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Button } from \"react-bootstrap\";\n\nfunction LoginButton() {\n  const { isAuthenticated, loginWithRedirect } = useAuth0();\n\n  if (!isAuthenticated) {\n    return <Button onClick={loginWithRedirect}>ログイン</Button>;\n  } else {\n    return null;\n  }\n}\n\nexport default LoginButton;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Image } from \"react-bootstrap\";\nexport const UserProfileAvatar = (props) => {\n  const { user } = useAuth0();\n  return (\n    <Image\n      style={{ width: \"30px\" }}\n      src={user.picture}\n      roundedCircle\n      {...props}\n    />\n  );\n};\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { NavDropdown, Dropdown } from \"react-bootstrap\";\nimport { UserProfileAvatar } from \"./UserProfileAvatar\";\n\nconst UserProfileDropdown = (props) => {\n  const { user, isAuthenticated, logout } = useAuth0();\n  return isAuthenticated ? (\n    <NavDropdown\n      alignRight\n      title={<UserProfileAvatar {...props} />}\n      id=\"basic-nav-dropdown\"\n    >\n      <Dropdown.Header>\n        <div>アカウント名：{user.name}</div>\n      </Dropdown.Header>\n      <NavDropdown.Divider />\n      {/* <NavDropdown.Item href=\"#/action-2\">Another action</NavDropdown.Item>\n      <NavDropdown.Item href=\"#/action-3\">Something else</NavDropdown.Item> */}\n      <NavDropdown.Divider />\n      <NavDropdown.Item>\n        <div\n          onClick={() => {\n            logout({ returnTo: window.location.origin });\n          }}\n        >\n          → ログアウト\n        </div>\n      </NavDropdown.Item>\n    </NavDropdown>\n  ) : null;\n};\nexport default UserProfileDropdown;\n","import React from \"react\";\nimport LoginButton from \"../auth/LoginButton\";\nimport { Navbar } from \"react-bootstrap\";\nimport UserProfileDropdown from \"../user/UserProfileDropdown\";\nimport * as config from \"../../app.config.json\";\n\nexport const Header = () => {\n  return (\n    <Navbar\n      style={{\n        borderBottom: \"solid 1.5px #f3f4f4\",\n        height: \"56px\",\n        marginBottom: \"20px\",\n      }}\n      bg=\"white\"\n      expand=\"lg\"\n      className=\"justify-content-between\"\n    >\n      <Navbar.Brand href=\"/\">{config.app.name}</Navbar.Brand>\n      <LoginButton />\n      <UserProfileDropdown />\n    </Navbar>\n  );\n};\n","import React from \"react\";\n\n// interface IProps {\n//   icon: JSX.Element;\n//   text: string;\n// }\nconst TextWithIcon = ({ icon, text }) => {\n  return (\n    <div>\n      <span style={{ paddingRight: \"10px\" }}>{icon}</span>\n      <span>{text}</span>\n    </div>\n  );\n};\n\nexport default TextWithIcon;\n","import React from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport {\n  House,\n  CardHeading,\n  InfoCircle,\n  PersonFill,\n  Eyeglasses,\n} from \"react-bootstrap-icons\";\nimport TextWithIcon from \"../text/TextWithIcon\";\n\nconst LinkItem = ({ pathname, pageName, icon }) => {\n  const black = \"black\";\n  const cyan = \"#17A2AE\";\n\n  const history = useHistory();\n  const location = useLocation();\n  return (\n    <Nav.Link\n      onClick={() => {\n        history.push(pathname);\n      }}\n      style={{ color: location.pathname === pathname ? cyan : black }}\n    >\n      <TextWithIcon icon={icon} text={pageName} />\n    </Nav.Link>\n  );\n};\n\nexport const Links = () => {\n  return (\n    <Nav className=\"flex-column\">\n      <LinkItem pathname=\"/\" pageName=\"Home\" icon={<House />} />\n      <LinkItem\n        pathname=\"/clinic-charts\"\n        pageName=\"カルテ編集\"\n        icon={<CardHeading />}\n      />\n      <LinkItem\n        pathname=\"/frame-info\"\n        pageName=\"フレーム情報編集\"\n        icon={<Eyeglasses />}\n      />\n      <LinkItem\n        pathname=\"/account-info\"\n        pageName=\"アカウント情報\"\n        icon={<PersonFill />}\n      />\n      <LinkItem\n        pathname=\"/app-info\"\n        pageName=\"アプリ情報\"\n        icon={<InfoCircle />}\n      />\n    </Nav>\n  );\n};\n","import React from \"react\";\nimport { Header } from \"./Header\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Links } from \"./Links\";\nexport const Layout = ({ children }) => {\n  return (\n    <>\n      <Container>\n        <Header />\n        <Row>\n          <Col xs={2} style={{ minWidth: \"250px\" }}>\n            <Links />\n          </Col>\n          <Col xs={8}>{children}</Col>\n          <Col xs={2}></Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n","import React from \"react\";\n\nconst AppInfo = () => {\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"mb-5 text-center\">アプリ情報</h1>\n\n      <div className=\"card\">\n        <h2 className=\"mb-5 text-center card-header\">更新履歴</h2>\n        <ul>\n          <li className=\"mb-5\">\n            2021/04/16　ログイン機能/アカウント情報画面/アプリ情報画面を実装しました。\n          </li>\n          <li className=\"mb-5\">2021/04/15　アプリを作成しました。</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default AppInfo;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { UserProfileAvatar } from \"../components/user/UserProfileAvatar\";\n\nconst AccountInfo = () => {\n  const { user } = useAuth0();\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\" mb-5 text-center\">アカウント情報</h1>\n      <div className=\"card mt-5 pb-5 pt-5\">\n        <div className=\"card-body w-50 mx-auto d-flex justify-content-center flex-column\">\n          <UserProfileAvatar\n            style={{ width: \"100px\" }}\n            className=\"mb-5 mx-auto\"\n          />\n          <div className=\"mb-5\">\n            <h5>名前</h5>\n            <div>{user.name}</div>\n          </div>\n\n          <div className=\"mb-5\">\n            <h5>ニックネーム</h5>\n            <div>{user.nickname}</div>\n          </div>\n          {/* <h2>picture</h2>\n      <div>{user.picture}</div> */}\n          <div>\n            <h5>メールアドレス</h5>\n            <div>{user.email}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AccountInfo;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport { ProtectedRoute } from \"./components/auth/ProtectedRoute\";\nimport ClinicCharts from \"./pages/ClinicCharts\";\nimport FrameInfo from \"./pages/FrameInfo\";\nimport { Layout } from \"./components/layout/Layout\";\nimport AppInfo from \"./pages/AppInfo\";\nimport AccountInfo from \"./pages/AccountInfo\";\n\nfunction App() {\n  const { isLoading } = useAuth0();\n  if (isLoading) {\n    return <p></p>;\n  }\n  return (\n    <Router>\n      <Layout>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <ProtectedRoute path=\"/clinic-charts\" component={ClinicCharts} />\n          <ProtectedRoute path=\"/frame-info\" component={FrameInfo} />\n          <ProtectedRoute path=\"/account-info\" exact component={AccountInfo} />\n          <Route path=\"/app-info\" exact component={AppInfo} />\n        </Switch>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Auth0Provider\n      domain={process.env.REACT_APP_AUTH0_DOMAIN}\n      clientId={process.env.REACT_APP_AUTH0_CLIENT_ID}\n      redirectUri={window.location.origin}\n    >\n      <App />\n    </Auth0Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}