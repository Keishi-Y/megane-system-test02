{"version":3,"sources":["components/auth/LoginButton.js","components/auth/LogoutButton.js","pages/Home.js","components/auth/ProtectedRoute.js","components/tableData/chart/Chart.js","components/tableData/functions/SortButton.js","components/tableData/functions/FilterForm.js","components/tableData/chart/ChartList.js","pages/ClinicCharts.js","components/tableData/frame/Frame.js","components/tableData/frame/FrameList.js","pages/FrameInfo.js","components/user/UserProfileAvatar.js","components/user/UserProfileDropdown.js","components/layout/Header.js","components/text/TextWithIcon.js","components/layout/Links.js","components/layout/Layout.js","pages/AppInfo.js","pages/AccountInfo.js","pages/Setting.js","components/tableData/chart/ChartForm.js","pages/CreateClinicCharts.js","components/tableData/tag/Tags.js","components/tableData/frame/FrameForm.js","pages/CreateFrameInfo.js","App.js","serviceWorker.js","index.js"],"names":["LoginButton","useAuth0","isAuthenticated","loginWithRedirect","Button","onClick","LogoutButton","logout","variant","returnTo","window","location","origin","Home","className","ProtectedRoute","component","args","withAuthenticationRequired","Chart","chart","refreshCharts","deleteChart","a","fetch","method","body","JSON","stringify","id","console","error","updateDate","sort_id","name","birthday","tel","email","address","firstVisit","lastVisit","SortButton","handleSortAscend","handleSortDescend","FilterForm","handleFilterList","searchTitle","onSubmit","e","preventDefault","handleSubmit","type","onChange","ChartList","charts","useState","arrangeList","setArrangeList","isArrangedAscend","setArrangedAscend","isArrangedDescend","setArrangedDescend","useEffect","unmount","arranged","sort","b","list","handleSortDsecend","filterd","filter","item","toLowerCase","search","target","value","map","key","ClinicCharts","setCharts","loadCharts","mountState","res","json","to","Frame","frame","refreshFrames","deleteFrame","frameName","productNumber","parseInt","priceTaxExcluded","toLocaleString","targetGender","frameType","series","category","weight","nosePad","materialFront","material","index","materialTemple","color","FrameList","frames","FrameInfo","setFrames","loadFrames","UserProfileAvatar","props","user","Image","style","width","src","picture","roundedCircle","UserProfileDropdown","NavDropdown","alignRight","title","Dropdown","Header","Divider","Item","Navbar","borderBottom","height","marginBottom","background","boxShadow","expand","Brand","href","config","TextWithIcon","icon","text","paddingRight","LinkItem","pathname","pageName","history","useHistory","useLocation","Nav","Link","push","Links","Layout","children","Container","Row","Col","xs","minWidth","borderRight","AppInfo","AccountInfo","nickname","Setting","ChartForm","chartAdded","setUpdateDate","setName","setBirthday","setTel","setEmail","setAddress","setFirstVisit","setLastVisit","submitChart","alert","date","Date","htmlFor","Tags","tagsUpdated","tagChoices","selectedTags","setSelectedTags","tagChange","alreadySelected","includes","checked","prevTag","choice","FrameForm","frameAdded","setFrameName","setProductNumber","setPriceTaxExcluded","setTargetGender","setFrameType","setSeries","setCategory","setWeight","setNosePad","setMaterialFront","setMaterialTemple","setColor","count","setCount","submitFrame","selectList","targetGenderList","frameTypeList","seriesList","categoryList","nosePadList","materialChoices","colorList","CreateFrameInfo","App","isLoading","path","exact","CreateClinicCharts","Boolean","hostname","match","ReactDOM","render","StrictMode","domain","process","clientId","redirectUri","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.33a85a80.chunk.js","sourcesContent":["import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Button } from \"react-bootstrap\";\n\nfunction LoginButton() {\n  const { isAuthenticated, loginWithRedirect } = useAuth0();\n\n  if (!isAuthenticated) {\n    return <Button onClick={loginWithRedirect}>ログイン</Button>;\n  } else {\n    return null;\n  }\n}\n\nexport default LoginButton;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Button } from \"react-bootstrap\";\n\nfunction LogoutButton() {\n  const { logout } = useAuth0();\n\n  return (\n    <Button\n      variant=\"primary\"\n      onClick={() => {\n        logout({\n          returnTo: window.location.origin,\n        });\n      }}\n    >\n      ログアウト\n    </Button>\n  );\n}\n\n// function LogoutButton(props) {\n//   const { isAuthenticated, logout } = useAuth0();\n\n//   return isAuthenticated(\n//     <Button\n//       variant=\"outline-primary\"\n//       onClick={() => {\n//         logout({\n//           returnTo: window.location.origin,\n//         });\n//       }}\n//       {...props}\n//     >\n//       ログアウト\n//     </Button>\n//   );\n// }\n\nexport default LogoutButton;\n","import React from \"react\";\nimport LoginButton from \"../components/auth/LoginButton\";\nimport LogoutButton from \"../components/auth/LogoutButton\";\n\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst Home = () => {\n  const { isAuthenticated } = useAuth0();\n\n  return (\n    <>\n      {isAuthenticated ? (\n        <div className=\"mt-5\">\n          <h1 className=\"text-center mb-5\">マイページ</h1>\n          <div>\n            <p>ログイン済の場合に表示されるアプリのホーム画面です。</p>\n            <LogoutButton />\n          </div>\n        </div>\n      ) : (\n        <div className=\"mt-5\">\n          <h1 className=\"text-center mb-5\">HOME</h1>\n          <div>\n            <p>\n              未ログイン時に表示されるアプリのホーム画面です。編集画面にアクセスするためにはログインが必要です。\n            </p>\n            <p>\n              ログインせずに左側ナビゲーションバーの「カルテ情報」「フレーム情報」をクリックすると、ログイン画面(Auth0)にリダイレクトされます。\n            </p>\n            <p>\n              Auth0にて事前に登録されているアカウント(下記テスト用アカウント)のみログインできます。（本アプリからの新たなアカウント登録不可）\n            </p>\n            <p>\n              ◆テスト用アカウント<br></br>\n              アカウント名:megane<br></br>パスワード：megane_1234\n            </p>\n            <LoginButton />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import { withAuthenticationRequired } from \"@auth0/auth0-react\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nexport function ProtectedRoute({ component, ...args }) {\n  return (\n    <Route component={withAuthenticationRequired(component, {})} {...args} />\n  );\n}\n","import React from \"react\";\n\nexport default function Chart({ chart, refreshCharts }) {\n  // const formatted_birthday = record.birthday.replace(/-/g, \" / \");\n\n  const deleteChart = async () => {\n    try {\n      await fetch(\"/api/charts\", {\n        method: \"DELETE\",\n        body: JSON.stringify({ id: chart.id }),\n      });\n      refreshCharts();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"list-group-item mt-3\">\n      <span className=\"d-block mt-4\">最終更新日時：{chart.updateDate}</span>\n      <h4 className=\"list-group-item-heading mt-4 mb-4\">\n        No.{chart.sort_id}　お名前：{chart.name}\n      </h4>\n      <p className=\"list-group-item-heading\">顧客ID：{chart.id}</p>\n      <p className=\"list-group-item-heading\">生年月日：{chart.birthday}</p>\n      <p className=\"list-group-item-heading\">電話番号：{chart.tel}</p>\n      <p className=\"list-group-item-heading\">メールアドレス：{chart.email}</p>\n      <p className=\"list-group-item-heading\">住所：{chart.address}</p>\n      <p className=\"list-group-item-heading\">初回来店日：{chart.firstVisit}</p>\n      <p className=\"list-group-item-heading\">最終来店日：{chart.lastVisit}</p>\n      <button className=\"btn btn-sm btn-danger ml-2\" onClick={deleteChart}>\n        削除\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\n\nconst SortButton = ({ handleSortAscend, handleSortDescend }) => {\n  return (\n    <div>\n      <div>\n        <span>並び替え：</span>\n        <button onClick={() => handleSortAscend()}>古い順</button>\n        <button onClick={() => handleSortDescend()}>新しい順</button>\n      </div>\n    </div>\n  );\n};\n\nexport default SortButton;\n","import React from \"react\";\n\nconst FilterForm = ({ handleFilterList, searchTitle }) => {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <div className=\"mt-3\">\n      <span>{searchTitle}</span>\n      <form className=\"d-inline\" onSubmit={(e) => handleSubmit(e)}>\n        <input type=\"text\" onChange={handleFilterList} />\n      </form>\n    </div>\n  );\n};\n\nexport default FilterForm;\n","import React, { useState, useEffect } from \"react\";\nimport Chart from \"./Chart\";\nimport SortButton from \"../functions/SortButton\";\nimport FilterForm from \"../functions/FilterForm\";\n\nexport default function ChartList({ charts, refreshCharts }) {\n  const [arrangeList, setArrangeList] = useState(charts);\n  const [isArrangedAscend, setArrangedAscend] = useState(false);\n  const [isArrangedDescend, setArrangedDescend] = useState(false);\n\n  useEffect(() => {\n    let unmount = false;\n    if (!unmount) {\n      const arranged = [...charts].sort((a, b) => {\n        if (a.sort_id > b.sort_id) {\n          return -1;\n        } else {\n          return 1;\n        }\n      });\n      setArrangeList(arranged);\n      setArrangedDescend(true);\n    }\n    return () => {\n      unmount = true;\n    };\n  }, [charts]);\n\n  const handleSortAscend = (list = [...arrangeList]) => {\n    const arranged = list.sort((a, b) => {\n      if (a.sort_id < b.sort_id) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n    setArrangeList(arranged);\n    setArrangedDescend(false);\n    setArrangedAscend(true);\n  };\n\n  const handleSortDsecend = (list = [...arrangeList]) => {\n    const arranged = list.sort((a, b) => {\n      if (a.sort_id > b.sort_id) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n    setArrangeList(arranged);\n    setArrangedDescend(true);\n    setArrangedAscend(false);\n  };\n\n  const handleFilterList = (e) => {\n    let filterd = [...charts];\n    filterd = filterd.filter((item) => {\n      if (item.name.toLowerCase().search(e.target.value.toLowerCase()) !== -1) {\n        return true;\n      }\n      if (item.id.toLowerCase().search(e.target.value.toLowerCase()) !== -1) {\n        return true;\n      }\n    });\n    if (isArrangedAscend) {\n      handleSortAscend(filterd);\n    }\n    if (isArrangedDescend) {\n      handleSortDsecend(filterd);\n    }\n    setArrangeList(filterd);\n  };\n\n  return (\n    <div>\n      <h2 className=\"mt-5 mb-3\">カルテ一覧</h2>\n      <SortButton\n        handleSortDescend={handleSortDsecend}\n        handleSortAscend={handleSortAscend}\n      />\n      <FilterForm\n        handleFilterList={handleFilterList}\n        searchTitle={\"名前or顧客ID検索：\"}\n      />\n      <div className=\"list-group\">\n        {arrangeList.map((chart) => (\n          <Chart chart={chart} key={chart.id} refreshCharts={refreshCharts} />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport ChartList from \"../components/tableData/chart/ChartList\";\nimport { Link } from \"react-router-dom\";\n\nconst ClinicCharts = () => {\n  const [charts, setCharts] = useState([]);\n\n  const loadCharts = async (mountState) => {\n    try {\n      const res = await fetch(\"/api/charts\");\n      const charts = await res.json();\n      if (!mountState) {\n        setCharts(charts);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    let unmount = false;\n    loadCharts(unmount);\n    return () => {\n      unmount = true;\n    };\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"mb-5 text-center\">カルテ編集</h1>\n      <div className=\"container mt-5 mb-5\">\n        <Link to=\"/create-clinic-charts\" className=\"btn-dark btn\">\n          カルテ 新規追加画面に進む\n        </Link>\n        <ChartList charts={charts} refreshCharts={loadCharts} />\n      </div>\n    </div>\n  );\n};\n\nexport default ClinicCharts;\n","import React from \"react\";\n\nexport default function Frame({ frame, refreshFrames }) {\n  // const formatted_birthday = record.birthday.replace(/-/g, \" / \");\n\n  const deleteFrame = async () => {\n    try {\n      await fetch(\"/api/frames\", {\n        method: \"DELETE\",\n        body: JSON.stringify({ id: frame.id }),\n      });\n      refreshFrames();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"list-group-item mt-3\">\n      <span className=\"d-block mt-4\">最終更新日時：{frame.updateDate}</span>\n      <h4 className=\"list-group-item-heading mt-4 mb-4\">\n        No.{frame.sort_id}　商品名：{frame.frameName}\n      </h4>\n      <p className=\"list-group-item-heading\">品番：{frame.productNumber}</p>\n      <p className=\"list-group-item-heading\">\n        価格（税抜）：￥ {parseInt(frame.priceTaxExcluded).toLocaleString()}\n      </p>\n      <p className=\"list-group-item-heading\">\n        価格（税込）：￥{\" \"}\n        {parseInt(frame.priceTaxExcluded * 1.1).toLocaleString()}\n      </p>\n      <p className=\"list-group-item-heading\">性別：{frame.targetGender}</p>\n      <p className=\"list-group-item-heading\">\n        フレームタイプ：{frame.frameType}\n      </p>\n      <p className=\"list-group-item-heading\">シリーズ：{frame.series}</p>\n      <p className=\"list-group-item-heading\">カテゴリ：{frame.category}</p>\n      {/* <p className=\"list-group-item-heading\">商品説明：{frame.description}</p> */}\n      {/* <p className=\"list-group-item-heading\">キーワード：{frame.keywords}</p> */}\n      {/* <p className=\"list-group-item-heading\">サイズ：{frame.size}</p> */}\n      <p className=\"list-group-item-heading\">フレームの重さ：{frame.weight}</p>\n      <p className=\"list-group-item-heading\">鼻パッドの形状：{frame.nosePad}</p>\n      <p className=\"list-group-item-heading\">\n        フレーム素材（フロント）：{\"\"}\n        {frame.materialFront &&\n          frame.materialFront.map((material, index) => (\n            <span className=\"badge badge-primary mr-2\" key={index}>\n              {material}\n            </span>\n          ))}\n      </p>\n      <p className=\"list-group-item-heading\">\n        フレーム素材（テンプル）：{\" \"}\n        {frame.materialTemple &&\n          frame.materialTemple.map((material, index) => (\n            <span className=\"badge badge-primary mr-2\" key={index}>\n              {material}\n            </span>\n          ))}\n      </p>\n      <p className=\"list-group-item-heading\">カラー：{frame.color}</p>\n      <button className=\"btn btn-sm btn-danger ml-2\" onClick={deleteFrame}>\n        削除\n      </button>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Frame from \"./Frame\";\nimport SortButton from \"../functions/SortButton\";\nimport FilterForm from \"../functions/FilterForm\";\n\nexport default function FrameList({ frames, refreshFrames }) {\n  const [arrangeList, setArrangeList] = useState(frames);\n  const [isArrangedAscend, setArrangedAscend] = useState(false);\n  const [isArrangedDescend, setArrangedDescend] = useState(false);\n\n  useEffect(() => {\n    let unmount = false;\n    if (!unmount) {\n      const arranged = [...frames].sort((a, b) => {\n        if (a.sort_id > b.sort_id) {\n          return -1;\n        } else {\n          return 1;\n        }\n      });\n      setArrangeList(arranged);\n      setArrangedDescend(true);\n      // setArrangeList([...arranged]);\n    }\n    return () => {\n      unmount = true;\n    };\n  }, [frames]);\n\n  const handleSortAscend = (list = [...arrangeList]) => {\n    // const arranged = [...frames].sort((a, b) => {\n    const arranged = list.sort((a, b) => {\n      if (a.sort_id < b.sort_id) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n    setArrangeList(arranged);\n    setArrangedDescend(false);\n    setArrangedAscend(true);\n  };\n\n  const handleSortDsecend = (list = [...arrangeList]) => {\n    // const arranged = [...frames].sort((a, b) => {\n    const arranged = list.sort((a, b) => {\n      if (a.sort_id > b.sort_id) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n    setArrangeList(arranged);\n    setArrangedDescend(true);\n    setArrangedAscend(false);\n  };\n\n  const handleFilterList = (e) => {\n    // const filterd = [...frames].filter((item) => {\n    let filterd = [...frames];\n\n    filterd = filterd.filter((item) => {\n      if (\n        item.frameName.toLowerCase().search(e.target.value.toLowerCase()) !== -1\n      ) {\n        return true;\n      }\n      if (\n        item.productNumber\n          .toLowerCase()\n          .search(e.target.value.toLowerCase()) !== -1\n      ) {\n        return true;\n      }\n    });\n    if (isArrangedAscend) {\n      handleSortAscend(filterd);\n    }\n    if (isArrangedDescend) {\n      handleSortDsecend(filterd);\n    }\n    setArrangeList(filterd);\n  };\n\n  return (\n    <div>\n      <h2 className=\"mt-5 mb-3\">フレーム情報一覧</h2>\n      <SortButton\n        handleSortDescend={handleSortDsecend}\n        handleSortAscend={handleSortAscend}\n      />\n      <FilterForm\n        handleFilterList={handleFilterList}\n        searchTitle={\"商品名or品番検索：\"}\n      />\n      <div className=\"list-group\">\n        {arrangeList.map((frame) => (\n          <Frame frame={frame} key={frame.id} refreshFrames={refreshFrames} />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport FrameList from \"../components/tableData/frame/FrameList\";\nimport { Link } from \"react-router-dom\";\n\nconst FrameInfo = () => {\n  const [frames, setFrames] = useState([]);\n\n  const loadFrames = async (mountState) => {\n    try {\n      const res = await fetch(\"/api/frames\");\n      const frames = await res.json();\n      if (!mountState) {\n        setFrames(frames);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    let unmount = false;\n    loadFrames(unmount);\n    return () => {\n      unmount = true;\n    };\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"mb-5 text-center\">フレーム情報一覧</h1>\n      <div className=\"container mt-5 mb-5\">\n        <Link to=\"/create-frame-info\" className=\"btn-dark btn\">\n          フレーム情報 新規追加画面に進む\n        </Link>\n        <FrameList frames={frames} refreshFrames={loadFrames} />\n      </div>\n    </div>\n  );\n};\n\nexport default FrameInfo;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Image } from \"react-bootstrap\";\nexport const UserProfileAvatar = (props) => {\n  const { user } = useAuth0();\n  return (\n    <Image\n      style={{ width: \"30px\" }}\n      src={user.picture}\n      roundedCircle\n      {...props}\n    />\n  );\n};\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { NavDropdown, Dropdown } from \"react-bootstrap\";\nimport { UserProfileAvatar } from \"./UserProfileAvatar\";\n\nconst UserProfileDropdown = (props) => {\n  const { user, isAuthenticated, logout } = useAuth0();\n  return isAuthenticated ? (\n    <NavDropdown\n      alignRight\n      title={<UserProfileAvatar {...props} />}\n      id=\"basic-nav-dropdown\"\n    >\n      <Dropdown.Header>\n        <div>アカウント名：{user.name}</div>\n      </Dropdown.Header>\n      <NavDropdown.Divider />\n      {/* <NavDropdown.Item href=\"#/action-2\">Another action</NavDropdown.Item>\n      <NavDropdown.Item href=\"#/action-3\">Something else</NavDropdown.Item> */}\n      <NavDropdown.Divider />\n      <NavDropdown.Item>\n        <div\n          onClick={() => {\n            logout({ returnTo: window.location.origin });\n          }}\n        >\n          → ログアウト\n        </div>\n      </NavDropdown.Item>\n    </NavDropdown>\n  ) : null;\n};\nexport default UserProfileDropdown;\n","import React from \"react\";\nimport LoginButton from \"../auth/LoginButton\";\nimport { Navbar } from \"react-bootstrap\";\nimport UserProfileDropdown from \"../user/UserProfileDropdown\";\nimport * as config from \"../../app.config.json\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nexport const Header = () => {\n  const { isAuthenticated } = useAuth0();\n\n  return (\n    <Navbar\n      style={{\n        borderBottom: \"solid 1.5px #f3f4f4\",\n        height: \"56px\",\n        marginBottom: \"20px\",\n        background: \"#fff\",\n        boxShadow: \"0px 5px 5px -5px rgba(0,0,0,0.5)\",\n      }}\n      expand=\"lg\"\n      className=\"justify-content-between\"\n    >\n      {isAuthenticated ? (\n        <Navbar.Brand href=\"/mypage\">{config.app.name}</Navbar.Brand>\n      ) : (\n        <Navbar.Brand href=\"/\">{config.app.name}</Navbar.Brand>\n      )}\n      <LoginButton />\n      <UserProfileDropdown />\n    </Navbar>\n  );\n};\n","import React from \"react\";\n\n// interface IProps {\n//   icon: JSX.Element;\n//   text: string;\n// }\nconst TextWithIcon = ({ icon, text }) => {\n  return (\n    <div>\n      <span style={{ paddingRight: \"10px\" }}>{icon}</span>\n      <span>{text}</span>\n    </div>\n  );\n};\n\nexport default TextWithIcon;\n","import React from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nimport {\n  House,\n  CardHeading,\n  Eyeglasses,\n  GearFill,\n} from \"react-bootstrap-icons\";\nimport TextWithIcon from \"../text/TextWithIcon\";\n\nconst LinkItem = ({ pathname, pageName, icon }) => {\n  const black = \"black\";\n  const cyan = \"#17A2AE\";\n\n  const history = useHistory();\n  const location = useLocation();\n  return (\n    <Nav.Link\n      onClick={() => {\n        history.push(pathname);\n      }}\n      style={{ color: location.pathname === pathname ? cyan : black }}\n    >\n      <TextWithIcon icon={icon} text={pageName} />\n    </Nav.Link>\n  );\n};\n\nexport const Links = () => {\n  const { isAuthenticated } = useAuth0();\n\n  return (\n    <Nav className=\"flex-column\">\n      {/* {isAuthenticated ? (\n        <LinkItem pathname=\"/mypage\" pageName=\"Home\" icon={<House />} />\n      ) : ( */}\n      <LinkItem pathname=\"/\" pageName=\"Home\" icon={<House />} />\n      <LinkItem\n        pathname=\"/clinic-charts\"\n        pageName=\"カルテ編集\"\n        icon={<CardHeading />}\n      />\n      <LinkItem\n        pathname=\"/frame-info\"\n        pageName=\"フレーム情報編集\"\n        icon={<Eyeglasses />}\n      />\n      {/* <LinkItem\n        pathname=\"/account-info\"\n        pageName=\"アカウント情報\"\n        icon={<PersonFill />}\n      /> */}\n      <LinkItem pathname=\"/setting\" pageName=\"アプリ設定\" icon={<GearFill />} />\n    </Nav>\n  );\n};\n","import React from \"react\";\nimport { Header } from \"./Header\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Links } from \"./Links\";\nexport const Layout = ({ children }) => {\n  return (\n    <>\n      <Header />\n      <Container className=\"mb-5\">\n        <Row>\n          <Col\n            xs={2}\n            style={{\n              minWidth: \"250px\",\n              borderRight: \"1px solid #ddd\",\n            }}\n          >\n            <Links />\n          </Col>\n          <Col xs={8}>{children}</Col>\n          <Col xs={2}></Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst AppInfo = () => {\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"mb-5 text-center\">アプリ情報</h1>\n      <Link to=\"/setting\" className=\"mb-5 btn btn-dark\">\n        設定一覧に戻る\n      </Link>\n      <div className=\"card\">\n        <h2 className=\"text-center card-header\">更新履歴</h2>\n        <ul className=\"list-group\">\n          <li className=\"list-group-item\">\n            2021/04/16　ログイン機能/アカウント情報画面/アプリ情報画面を実装しました。\n          </li>\n          <li className=\"list-group-item\">\n            2021/04/15　アプリを作成しました。\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default AppInfo;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { UserProfileAvatar } from \"../components/user/UserProfileAvatar\";\nimport { Link } from \"react-router-dom\";\n\nconst AccountInfo = () => {\n  const { user } = useAuth0();\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\" mb-5 text-center\">アカウント情報</h1>\n      <Link to=\"/setting\" className=\"mb-5 btn btn-dark\">\n        設定一覧に戻る\n      </Link>\n      <div className=\"card pb-5 pt-5\">\n        <div className=\"card-body w-50 mx-auto d-flex justify-content-center flex-column\">\n          <UserProfileAvatar\n            style={{ width: \"100px\" }}\n            className=\"mb-5 mx-auto\"\n          />\n          <div className=\"mb-5\">\n            <h5>名前</h5>\n            <div>{user.name}</div>\n          </div>\n\n          <div className=\"mb-5\">\n            <h5>ニックネーム</h5>\n            <div>{user.nickname}</div>\n          </div>\n          {/* <h2>picture</h2>\n      <div>{user.picture}</div> */}\n          <div>\n            <h5>メールアドレス</h5>\n            <div>{user.email}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AccountInfo;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Setting = () => {\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"mb-5 text-center\">アプリ設定</h1>\n\n      <div className=\"card\">\n        <h2 className=\"text-center card-header\">設定一覧</h2>\n        <ul className=\"list-group\">\n          <li className=\"list-group-item list-group-item-action\">設定項目1</li>\n          <li className=\"list-group-item list-group-item-action\">設定項目2</li>\n          <li className=\"list-group-item list-group-item-action\">設定項目3</li>\n          <li className=\"list-group-item list-group-item-action\">設定項目4</li>\n          <li className=\"list-group-item list-group-item-action\">\n            <Link to=\"/account-info\">アカウント情報</Link>\n          </li>\n          <li className=\"list-group-item list-group-item-action\">\n            <Link to=\"/app-info\" className=\"mb-5\">\n              アプリ情報\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Setting;\n","import React, { useState, useEffect } from \"react\";\n\nexport default function ChartForm({ chartAdded }) {\n  const [updateDate, setUpdateDate] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [birthday, setBirthday] = useState(\"\");\n  const [tel, setTel] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [firstVisit, setFirstVisit] = useState(\"\");\n  const [lastVisit, setLastVisit] = useState(\"\");\n\n  const resetForm = () => {\n    setUpdateDate(\"\");\n    setName(\"\");\n    setBirthday(\"\");\n    setTel(\"\");\n    setEmail(\"\");\n    setAddress(\"\");\n    setFirstVisit(\"\");\n    setLastVisit(\"\");\n  };\n  const submitChart = async (e) => {\n    e.preventDefault();\n    try {\n      await fetch(\"/api/charts\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          updateDate,\n          name,\n          birthday,\n          tel,\n          email,\n          address,\n          firstVisit,\n          lastVisit,\n        }),\n      });\n      resetForm();\n      chartAdded();\n    } catch (err) {\n      console.error(err);\n      window.alert(\"投稿エラーです\");\n    }\n  };\n\n  let date = new Date().toLocaleString();\n  useEffect(() => {\n    setUpdateDate(date);\n  }, [date]);\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">カルテを追加する</div>\n      <div className=\"card-body\">\n        <form className=\"\" onSubmit={submitChart}>\n          <div className=\"form-group\">\n            <label htmlFor=\"updateDate\">登録日時</label>\n            <input\n              type=\"text\"\n              name=\"updateDate\"\n              value={updateDate}\n              className=\"form-control\"\n              onChange={(e) => setUpdateDate(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">名前</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              className=\"form-control\"\n              onChange={(e) => setName(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"birthday\">生年月日</label>\n            <input\n              type=\"date\"\n              name=\"birthday\"\n              value={birthday}\n              className=\"form-control\"\n              onChange={(e) => setBirthday(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"tel\">電話番号</label>\n            <input\n              type=\"tel\"\n              name=\"tel\"\n              value={tel}\n              className=\"form-control\"\n              onChange={(e) => setTel(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"tel\">メールアドレス</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              className=\"form-control\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"address\">住所</label>\n            <input\n              type=\"text\"\n              name=\"address\"\n              value={address}\n              className=\"form-control\"\n              onChange={(e) => setAddress(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"firstVisit\">初回来店日</label>\n            <input\n              type=\"date\"\n              name=\"firstVisit\"\n              value={firstVisit}\n              className=\"form-control\"\n              onChange={(e) => setFirstVisit(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"lastVisit\">最終来店日</label>\n            <input\n              type=\"date\"\n              name=\"lastVisit\"\n              value={lastVisit}\n              className=\"form-control\"\n              onChange={(e) => setLastVisit(e.target.value)}\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            追加する\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport ChartForm from \"../components/tableData/chart/ChartForm\";\nimport { Link } from \"react-router-dom\";\n\nconst ClinicCharts = () => {\n  const [charts, setCharts] = useState([]);\n\n  const loadCharts = async () => {\n    try {\n      const res = await fetch(\"/api/charts\");\n      const charts = await res.json();\n      setCharts(charts);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    loadCharts();\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"mb-5 text-center\">カルテ新規追加</h1>\n      <Link to=\"/clinic-charts\" className=\"btn-dark btn\">\n        カルテ一覧に戻る\n      </Link>\n      <div className=\"container mt-5 mb-5\">\n        <ChartForm chartAdded={loadCharts} />\n      </div>\n    </div>\n  );\n};\n\nexport default ClinicCharts;\n","import React, { useState, useEffect } from \"react\";\n\nexport default function Tags({ tagsUpdated, key, tagChoices }) {\n  const [selectedTags, setSelectedTags] = useState([]);\n\n  useEffect(() => {\n    setSelectedTags([]);\n  }, [key]);\n\n  const tagChange = (e) => {\n    const value = e.target.value;\n    const alreadySelected = selectedTags.includes(value);\n    if (e.target.checked && !alreadySelected) {\n      setSelectedTags([...selectedTags, value]);\n    } else if (!e.target.checked && alreadySelected) {\n      setSelectedTags(selectedTags.filter((prevTag) => prevTag !== value));\n    }\n  };\n\n  useEffect(() => {\n    tagsUpdated(selectedTags);\n  }, [selectedTags, tagsUpdated]);\n\n  return (\n    <>\n      {tagChoices.map((choice, index) => (\n        <label className=\"checkbox-inline mr-3c checkbox-label\" key={index}>\n          <input\n            className=\"checkbox-button\"\n            type=\"checkbox\"\n            value={choice}\n            onChange={tagChange}\n          />\n          {\" \" + choice}\n        </label>\n      ))}\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Tags from \"../tag/Tags\";\nimport selectList from \"../selectList/SelectList.json\";\n\nexport default function FrameForm({ frameAdded }) {\n  const [updateDate, setUpdateDate] = useState(\"\");\n  const [frameName, setFrameName] = useState(\"\");\n  const [productNumber, setProductNumber] = useState(\"\");\n  const [priceTaxExcluded, setPriceTaxExcluded] = useState(\"\");\n  const [targetGender, setTargetGender] = useState([]);\n  const [frameType, setFrameType] = useState([]);\n  const [series, setSeries] = useState([]);\n  const [category, setCategory] = useState([]);\n  // const [description, setDescription] = useState(\"\");\n  // const [keywords, setKeywords] = useState(\"\");\n  // const [size, setSize] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n  const [nosePad, setNosePad] = useState([]);\n  const [materialFront, setMaterialFront] = useState([]);\n  const [materialTemple, setMaterialTemple] = useState([]);\n  const [color, setColor] = useState([]);\n\n  const [count, setCount] = useState(0);\n\n  const resetFrameForm = () => {\n    setUpdateDate(\"\");\n    setFrameName(\"\");\n    setProductNumber(\"\");\n    setPriceTaxExcluded(\"\");\n    setTargetGender(\"\");\n    setFrameType(\"\");\n    setSeries(\"\");\n    setCategory(\"\");\n    // setDescription(\"\");\n    // setKeywords(\"\");\n    // setSize(\"\");\n    setWeight(\"\");\n    setNosePad(\"\");\n    setMaterialFront(\"\");\n    setMaterialTemple(\"\");\n    setColor(\"\");\n    setCount(count + 1);\n  };\n\n  const submitFrame = async (e) => {\n    e.preventDefault();\n    try {\n      await fetch(\"/api/frames\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          updateDate,\n          frameName,\n          productNumber,\n          priceTaxExcluded,\n          targetGender,\n          frameType,\n          series,\n          category,\n          // description,\n          // keywords,\n          // size,\n          weight,\n          nosePad,\n          materialFront,\n          materialTemple,\n          color,\n        }),\n      });\n      resetFrameForm();\n      frameAdded();\n    } catch (err) {\n      console.error(err);\n      window.alert(\"投稿エラーです\");\n    }\n  };\n\n  let date = new Date().toLocaleString();\n  useEffect(() => {\n    setUpdateDate(date);\n  }, [date]);\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">フレーム情報を追加する</div>\n      <div className=\"card-body\">\n        <form className=\"\" onSubmit={submitFrame}>\n          <div className=\"form-group\">\n            <label htmlFor=\"updateDate\">登録日時</label>\n            <input\n              type=\"text\"\n              name=\"updateDate\"\n              value={updateDate}\n              className=\"form-control\"\n              onChange={(e) => setUpdateDate(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"frameName\">品名</label>\n            <input\n              type=\"text\"\n              name=\"frameName\"\n              value={frameName}\n              className=\"form-control\"\n              onChange={(e) => setFrameName(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"productNumber\">品番</label>\n            <input\n              type=\"text\"\n              name=\"productNumber\"\n              value={productNumber}\n              className=\"form-control\"\n              onChange={(e) => setProductNumber(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"priceTaxExcluded\">価格（税抜）</label>\n            <input\n              type=\"text\"\n              name=\"priceTaxExcluded\"\n              value={priceTaxExcluded}\n              className=\"form-control\"\n              onChange={(e) => setPriceTaxExcluded(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"targetGender\">性別</label>\n            <select\n              onChange={(e) => setTargetGender(e.target.value)}\n              className=\"form-control\"\n              name=\"targetGender\"\n            >\n              {selectList.targetGenderList.map((targetGender, index) => (\n                <option value={targetGender} key={index}>\n                  {targetGender}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"frameType\">フレームタイプ</label>\n            <select\n              onChange={(e) => setFrameType(e.target.value)}\n              className=\"form-control\"\n              name=\"frameType\"\n            >\n              {selectList.frameTypeList.map((frameType, index) => (\n                <option value={frameType} key={index}>\n                  {frameType}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"series\">シリーズ</label>\n            <select\n              onChange={(e) => setSeries(e.target.value)}\n              className=\"form-control\"\n              name=\"series\"\n            >\n              {selectList.seriesList.map((series, index) => (\n                <option value={series} key={index}>\n                  {series}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"category\">カテゴリー</label>\n            <select\n              onChange={(e) => setCategory(e.target.value)}\n              className=\"form-control\"\n              name=\"category\"\n            >\n              {selectList.categoryList.map((category, index) => (\n                <option value={category} key={index}>\n                  {category}\n                </option>\n              ))}\n            </select>\n          </div>\n          {/* <div className=\"form-group\">\n            <label htmlFor=\"description\">商品説明</label>\n            <input\n              type=\"text\"\n              name=\"description\"\n              value={description}\n              className=\"form-control\"\n              onChange={(e) => setDescription(e.target.value)}\n            />\n          </div> */}\n          {/* <div className=\"form-group\">\n            <label htmlFor=\"keywords\">キーワード</label>\n            <input\n              type=\"text\"\n              name=\"keywords\"\n              value={keywords}\n              className=\"form-control\"\n              onChange={(e) => setKeywords(e.target.value)}\n            />\n          </div> */}\n          {/* <div className=\"form-group\">\n            <label htmlFor=\"size\">サイズ</label>\n            <input\n              type=\"text\"\n              name=\"size\"\n              value={size}\n              className=\"form-control\"\n              onChange={(e) => setSize(e.target.value)}\n            />\n          </div> */}\n          <div className=\"form-group\">\n            <label htmlFor=\"weight\">フレームの重量</label>\n            <input\n              type=\"text\"\n              name=\"weight\"\n              value={weight}\n              className=\"form-control\"\n              onChange={(e) => setWeight(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"targetNosePad\">鼻パッドの形状</label>\n            <select\n              onChange={(e) => setNosePad(e.target.value)}\n              className=\"form-control\"\n              name=\"nosePad\"\n            >\n              {selectList.nosePadList.map((nosePad, index) => (\n                <option value={nosePad} key={index}>\n                  {nosePad}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"materialFront\">フレーム素材（フロント）: </label>\n            <Tags\n              tagsUpdated={setMaterialFront}\n              // key={count}\n              tagChoices={selectList.materialChoices}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"materialTemple\">フレーム素材（テンプル）：</label>\n            <Tags\n              tagsUpdated={setMaterialTemple}\n              // key={count}\n              tagChoices={selectList.materialChoices}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Color\">カラー</label>\n            <select\n              onChange={(e) => setColor(e.target.value)}\n              className=\"form-control\"\n              name=\"color\"\n            >\n              {selectList.colorList.map((color, index) => (\n                <option value={color} key={index}>\n                  {color}\n                </option>\n              ))}\n            </select>\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            追加する\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport FrameForm from \"../components/tableData/frame/FrameForm\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateFrameInfo = () => {\n  const [frames, setFrames] = useState([]);\n\n  const loadFrames = async (mountState) => {\n    try {\n      const res = await fetch(\"/api/frames\");\n      const frames = await res.json();\n      if (!mountState) {\n        setFrames(frames);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    let unmount = false;\n    loadFrames(unmount);\n    return () => {\n      unmount = true;\n    };\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"mb-5 text-center\">フレーム情報新規追加</h1>\n      <Link to=\"/frame-info\" className=\"btn-dark btn\">\n        フレーム情報一覧に戻る\n      </Link>\n      <div className=\"container mt-5 mb-5\">\n        <FrameForm frameAdded={loadFrames} />\n      </div>\n    </div>\n  );\n};\n\nexport default CreateFrameInfo;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport { ProtectedRoute } from \"./components/auth/ProtectedRoute\";\n// import { createBrowserHistory } from \"history\";\nimport ClinicCharts from \"./pages/ClinicCharts\";\nimport FrameInfo from \"./pages/FrameInfo\";\nimport { Layout } from \"./components/layout/Layout\";\nimport AppInfo from \"./pages/AppInfo\";\nimport AccountInfo from \"./pages/AccountInfo\";\nimport Setting from \"./pages/Setting\";\nimport CreateClinicCharts from \"./pages/CreateClinicCharts\";\nimport CreateFrameInfo from \"./pages/CreateFrameInfo\";\n// import MyPage from \"./pages/MyPage\";\n\nfunction App() {\n  const { isLoading } = useAuth0();\n  if (isLoading) {\n    return <p></p>;\n  }\n\n  return (\n    <Router>\n      <Layout>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <ProtectedRoute path=\"/clinic-charts\" component={ClinicCharts} />\n          <ProtectedRoute\n            path=\"/create-clinic-charts\"\n            exact\n            component={CreateClinicCharts}\n          />\n          <ProtectedRoute path=\"/frame-info\" component={FrameInfo} />\n          <ProtectedRoute\n            path=\"/create-frame-info\"\n            exact\n            component={CreateFrameInfo}\n          />\n          <ProtectedRoute path=\"/account-info\" exact component={AccountInfo} />\n          <Route path=\"/app-info\" exact component={AppInfo} />\n          <Route path=\"/setting\" exact component={Setting} />\n        </Switch>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Auth0Provider\n      domain={process.env.REACT_APP_AUTH0_DOMAIN}\n      clientId={process.env.REACT_APP_AUTH0_CLIENT_ID}\n      redirectUri={window.location.origin}\n    >\n      <App />\n    </Auth0Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}