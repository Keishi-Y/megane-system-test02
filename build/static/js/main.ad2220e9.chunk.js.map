{"version":3,"sources":["pages/Home.js","components/auth/ProtectedRoute.js","components/Record.js","components/RecordList.js","components/RecordForm.js","pages/ClinicRecords.js","components/auth/LoginButton.js","components/user/UserProfileAvatar.js","components/user/UserProfileDropdown.js","components/layout/Header.js","components/text/TextWithIcon.js","components/layout/Links.js","components/layout/Layout.js","pages/AppInfo.js","pages/AccountInfo.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","ProtectedRoute","component","args","withAuthenticationRequired","Record","record","refreshRecords","deleteRecord","a","fetch","method","body","JSON","stringify","id","console","error","name","birthday","tel","email","address","firstVisit","lastVisit","onClick","RecordList","records","map","key","RecordForm","recordAdded","useState","setName","setBirthday","setTel","setEmail","setAddress","setFirstVisit","setLastVisit","submitRecord","e","preventDefault","onSubmit","htmlFor","type","value","onChange","target","ClinicRecords","setCourses","loadRecords","res","json","useEffect","LoginButton","useAuth0","isAuthenticated","loginWithRedirect","Button","UserProfileAvatar","props","user","Image","style","width","src","picture","roundedCircle","UserProfileDropdown","logout","NavDropdown","alignRight","title","Dropdown","Header","Divider","Item","returnTo","window","location","origin","Navbar","borderBottom","height","marginBottom","bg","expand","Brand","href","config","TextWithIcon","icon","text","paddingRight","LinkItem","pathname","pageName","history","useHistory","useLocation","Nav","Link","push","color","Links","Layout","children","Container","Row","Col","xs","minWidth","AppInfo","AccountInfo","nickname","App","isLoading","path","exact","Boolean","hostname","match","ReactDOM","render","StrictMode","domain","process","clientId","redirectUri","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ad2220e9.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div className=\"mt-5\">\n      <h1 className=\"text-center mb-5\">HOME</h1>\n\n      <div>\n        <p>\n          アプリのホーム画面です。カルテ編集画面にアクセスするためにはログインが必要です。\n        </p>\n        <p>\n          ログインせずに左側ナビゲーションバーの「カルテ情報」「アカウント情報」をクリックすると、ログイン画面(Auth0)にリダイレクトされます。\n        </p>\n        <p>初回アクセス時はサインアップをしてください。</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { withAuthenticationRequired } from \"@auth0/auth0-react\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nexport function ProtectedRoute({ component, ...args }) {\n  return (\n    <Route component={withAuthenticationRequired(component, {})} {...args} />\n  );\n}\n","import React from \"react\";\n\nexport default function Record({ record, refreshRecords }) {\n  // const formatted_birthday = record.birthday.replace(/-/g, \" / \");\n\n  const deleteRecord = async () => {\n    try {\n      await fetch(\"/api/records\", {\n        method: \"DELETE\",\n        body: JSON.stringify({ id: record.id }),\n      });\n      refreshRecords();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"list-group-item\">\n      <h4 className=\"list-group-item-heading mt-4 mb-4\">\n        お名前：{record.name}\n      </h4>\n      <p className=\"list-group-item-heading\">生年月日：{record.birthday}</p>\n      <p className=\"list-group-item-heading\">電話番号：{record.tel}</p>\n      <p className=\"list-group-item-heading\">メールアドレス：{record.email}</p>\n      <p className=\"list-group-item-heading\">住所：{record.address}</p>\n      <p className=\"list-group-item-heading\">初回来店日：{record.firstVisit}</p>\n      <p className=\"list-group-item-heading\">最終来店日：{record.lastVisit}</p>\n      <button className=\"btn btn-sm btn-danger ml-2\" onClick={deleteRecord}>\n        削除\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Record from \"./Record\";\n\nexport default function RecordList({ records, refreshRecords }) {\n  return (\n    <div>\n      <h2 className=\"mt-5 mb-3\">カルテ一覧</h2>\n      <div className=\"list-group\">\n        {records.map((record) => (\n          <Record\n            record={record}\n            key={record.id}\n            refreshRecords={refreshRecords}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function RecordForm({ recordAdded }) {\n  const [name, setName] = useState(\"\");\n  const [birthday, setBirthday] = useState(\"\");\n  const [tel, setTel] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [firstVisit, setFirstVisit] = useState(\"\");\n  const [lastVisit, setLastVisit] = useState(\"\");\n\n  const resetForm = () => {\n    setName(\"\");\n    setBirthday(\"\");\n    setTel(\"\");\n    setEmail(\"\");\n    setAddress(\"\");\n    setFirstVisit(\"\");\n    setLastVisit(\"\");\n  };\n\n  const submitRecord = async (e) => {\n    e.preventDefault();\n    try {\n      await fetch(\"/api/records\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name,\n          birthday,\n          tel,\n          email,\n          address,\n          firstVisit,\n          lastVisit,\n        }),\n      });\n      resetForm();\n      recordAdded();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">カルテを追加する</div>\n      <div className=\"card-body\">\n        <form className=\"\" onSubmit={submitRecord}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">名前</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              className=\"form-control\"\n              onChange={(e) => setName(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"birthday\">生年月日</label>\n            <input\n              type=\"date\"\n              name=\"birthday\"\n              value={birthday}\n              className=\"form-control\"\n              onChange={(e) => setBirthday(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"tel\">電話番号</label>\n            <input\n              type=\"tel\"\n              name=\"tel\"\n              value={tel}\n              className=\"form-control\"\n              onChange={(e) => setTel(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"tel\">メールアドレス</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              className=\"form-control\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"address\">住所</label>\n            <input\n              type=\"text\"\n              name=\"address\"\n              value={address}\n              className=\"form-control\"\n              onChange={(e) => setAddress(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"firstVisit\">初回来店日</label>\n            <input\n              type=\"date\"\n              name=\"firstVisit\"\n              value={firstVisit}\n              className=\"form-control\"\n              onChange={(e) => setFirstVisit(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"lastVisit\">最終来店日</label>\n            <input\n              type=\"date\"\n              name=\"lastVisit\"\n              value={lastVisit}\n              className=\"form-control\"\n              onChange={(e) => setLastVisit(e.target.value)}\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            追加する\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport RecordList from \"../components/RecordList\";\nimport RecordForm from \"../components/RecordForm\";\n\nconst ClinicRecords = () => {\n  const [records, setCourses] = useState([]);\n  const loadRecords = async () => {\n    try {\n      const res = await fetch(\"/api/records\");\n      const records = await res.json();\n      setCourses(records);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    loadRecords();\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"mb-5 text-center\">カルテ編集</h1>\n      <div className=\"container mt-5 mb-5\">\n        <RecordForm recordAdded={loadRecords} />\n        <RecordList records={records} refreshRecords={loadRecords} />\n      </div>\n    </div>\n  );\n};\n\nexport default ClinicRecords;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Button } from \"react-bootstrap\";\n\nfunction LoginButton() {\n  const { isAuthenticated, loginWithRedirect } = useAuth0();\n\n  if (!isAuthenticated) {\n    return <Button onClick={loginWithRedirect}>ログイン</Button>;\n  } else {\n    return null;\n  }\n}\n\nexport default LoginButton;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Image } from \"react-bootstrap\";\nexport const UserProfileAvatar = (props) => {\n  const { user } = useAuth0();\n  return (\n    <Image\n      style={{ width: \"30px\" }}\n      src={user.picture}\n      roundedCircle\n      {...props}\n    />\n  );\n};\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { NavDropdown, Dropdown } from \"react-bootstrap\";\nimport { UserProfileAvatar } from \"./UserProfileAvatar\";\n\nconst UserProfileDropdown = (props) => {\n  const { user, isAuthenticated, logout } = useAuth0();\n  return isAuthenticated ? (\n    <NavDropdown\n      alignRight\n      title={<UserProfileAvatar {...props} />}\n      id=\"basic-nav-dropdown\"\n    >\n      <Dropdown.Header>\n        <div>アカウント名：{user.name}</div>\n      </Dropdown.Header>\n      <NavDropdown.Divider />\n      {/* <NavDropdown.Item href=\"#/action-2\">Another action</NavDropdown.Item>\n      <NavDropdown.Item href=\"#/action-3\">Something else</NavDropdown.Item> */}\n      <NavDropdown.Divider />\n      <NavDropdown.Item>\n        <div\n          onClick={() => {\n            logout({ returnTo: window.location.origin });\n          }}\n        >\n          → ログアウト\n        </div>\n      </NavDropdown.Item>\n    </NavDropdown>\n  ) : null;\n};\nexport default UserProfileDropdown;\n","import React from \"react\";\nimport LoginButton from \"../auth/LoginButton\";\nimport { Navbar } from \"react-bootstrap\";\nimport UserProfileDropdown from \"../user/UserProfileDropdown\";\nimport * as config from \"../../app.config.json\";\n\nexport const Header = () => {\n  return (\n    <Navbar\n      style={{\n        borderBottom: \"solid 1.5px #f3f4f4\",\n        height: \"56px\",\n        marginBottom: \"20px\",\n      }}\n      bg=\"white\"\n      expand=\"lg\"\n      className=\"justify-content-between\"\n    >\n      <Navbar.Brand href=\"/\">{config.app.name}</Navbar.Brand>\n      <LoginButton />\n      <UserProfileDropdown />\n    </Navbar>\n  );\n};\n","import React from \"react\";\n\n// interface IProps {\n//   icon: JSX.Element;\n//   text: string;\n// }\nconst TextWithIcon = ({ icon, text }) => {\n  return (\n    <div>\n      <span style={{ paddingRight: \"10px\" }}>{icon}</span>\n      <span>{text}</span>\n    </div>\n  );\n};\n\nexport default TextWithIcon;\n","import React from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport {\n  House,\n  CardHeading,\n  InfoCircle,\n  PersonFill,\n} from \"react-bootstrap-icons\";\nimport TextWithIcon from \"../text/TextWithIcon\";\n\nconst LinkItem = ({ pathname, pageName, icon }) => {\n  const black = \"black\";\n  const cyan = \"#17A2AE\";\n\n  const history = useHistory();\n  const location = useLocation();\n  return (\n    <Nav.Link\n      onClick={() => {\n        history.push(pathname);\n      }}\n      style={{ color: location.pathname === pathname ? cyan : black }}\n    >\n      <TextWithIcon icon={icon} text={pageName} />\n    </Nav.Link>\n  );\n};\n\nexport const Links = () => {\n  return (\n    <Nav className=\"flex-column\">\n      <LinkItem pathname=\"/\" pageName=\"Home\" icon={<House />} />\n      <LinkItem\n        pathname=\"/clinic-records\"\n        pageName=\"カルテ編集\"\n        icon={<CardHeading />}\n      />\n      <LinkItem\n        pathname=\"/account-info\"\n        pageName=\"アカウント情報\"\n        icon={<PersonFill />}\n      />\n      <LinkItem\n        pathname=\"/app-info\"\n        pageName=\"アプリ情報\"\n        icon={<InfoCircle />}\n      />\n    </Nav>\n  );\n};\n","import React from \"react\";\nimport { Header } from \"./Header\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Links } from \"./Links\";\nexport const Layout = ({ children }) => {\n  return (\n    <>\n      <Container>\n        <Header />\n        <Row>\n          <Col xs={2} style={{ minWidth: \"200px\" }}>\n            <Links />\n          </Col>\n          <Col xs={8}>{children}</Col>\n          <Col xs={2}></Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n","import React from \"react\";\n\nconst AppInfo = () => {\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"mb-5 text-center\">アプリ情報</h1>\n\n      <div className=\"card\">\n        <h2 className=\"mb-5 text-center card-header\">更新履歴</h2>\n        <ul>\n          <li className=\"mb-5\">\n            2021/04/16　ログイン機能/アカウント情報画面/アプリ情報画面を実装しました。\n          </li>\n          <li className=\"mb-5\">2021/04/15　アプリを作成しました。</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default AppInfo;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { UserProfileAvatar } from \"../components/user/UserProfileAvatar\";\n\nconst AccountInfo = () => {\n  const { user } = useAuth0();\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\" mb-5 text-center\">アカウント情報</h1>\n      <div className=\"card mt-5 pb-5 pt-5\">\n        <div className=\"card-body w-50 mx-auto d-flex justify-content-center flex-column\">\n          <UserProfileAvatar\n            style={{ width: \"100px\" }}\n            className=\"mb-5 mx-auto\"\n          />\n          <div className=\"mb-5\">\n            <h5>名前</h5>\n            <div>{user.name}</div>\n          </div>\n\n          <div className=\"mb-5\">\n            <h5>ニックネーム</h5>\n            <div>{user.nickname}</div>\n          </div>\n          {/* <h2>picture</h2>\n      <div>{user.picture}</div> */}\n          <div>\n            <h5>メールアドレス</h5>\n            <div>{user.email}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AccountInfo;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport { ProtectedRoute } from \"./components/auth/ProtectedRoute\";\nimport ClinicRecords from \"./pages/ClinicRecords\";\nimport { Layout } from \"./components/layout/Layout\";\nimport AppInfo from \"./pages/AppInfo\";\nimport AccountInfo from \"./pages/AccountInfo\";\n\nfunction App() {\n  const { isLoading } = useAuth0();\n  if (isLoading) {\n    return <p></p>;\n  }\n  return (\n    <Router>\n      <Layout>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <ProtectedRoute path=\"/clinic-records\" component={ClinicRecords} />\n          <ProtectedRoute path=\"/account-info\" exact component={AccountInfo} />\n          <Route path=\"/app-info\" exact component={AppInfo} />\n        </Switch>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Auth0Provider\n      domain={process.env.REACT_APP_AUTH0_DOMAIN}\n      clientId={process.env.REACT_APP_AUTH0_CLIENT_ID}\n      redirectUri={window.location.origin}\n    >\n      <App />\n    </Auth0Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}